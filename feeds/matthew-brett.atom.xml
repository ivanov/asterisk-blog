<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Asterisk - Matthew Brett</title><link href="http://asterisk.dynevor.org/" rel="alternate"></link><link href="http://asterisk.dynevor.org/feeds/matthew-brett.atom.xml" rel="self"></link><id>http://asterisk.dynevor.org/</id><updated>2017-11-08T12:00:00-08:00</updated><entry><title>Python and Matlab</title><link href="http://asterisk.dynevor.org/python-matlab.html" rel="alternate"></link><published>2017-11-08T12:00:00-08:00</published><updated>2017-11-08T12:00:00-08:00</updated><author><name>Matthew Brett</name></author><id>tag:asterisk.dynevor.org,2017-11-08:/python-matlab.html</id><summary type="html">&lt;p&gt;Comparing Python and Matlab for Psychology teaching&lt;/p&gt;</summary><content type="html">&lt;h1&gt;How easy are they to learn?&lt;/h1&gt;
&lt;p&gt;Python is a standard language for first programming courses in:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Of the &lt;a href="https://ocw.mit.edu/courses/intro-programming/#general"&gt;MIT courses on general
  programming&lt;/a&gt; four
  are in Python and one is in Java.&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://plus.google.com/u/0/+MatthewBrett/posts/HAsy7HWMyc5"&gt;Result from survey of computing
  languages&lt;/a&gt;.
  Sadly the &lt;a href="http://hammerprinciple.com/therighttool"&gt;source
  site&lt;/a&gt; had gone down at the time I
  wrote this, but the [Archive.org copy](
  (https://web.archive.org/web/20170204183750/hammerprinciple.com/therighttool)
  has pages summarizing
  &lt;a href="https://web.archive.org/web/20170205052954/http://www.hammerprinciple.com:80/therighttool/items/python"&gt;Python&lt;/a&gt;
  and
  &lt;a href="https://web.archive.org/web/20170205074106/http://www.hammerprinciple.com:80/therighttool/items/matlab"&gt;Matlab&lt;/a&gt;.
  Abstracting from my earlier summary: the survey responses suggest that
  Matlab is a niche language, and is harder to learn than Python.  Matlab code
  is less elegant, less readable, harder to maintain and harder to re-use.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In particular, Matlab rates much higher than Python on the question "This
  language is unusually bad for beginners", "This language has an annoying
  syntax" and "Writing code in this language is a lot of work".&lt;/p&gt;
&lt;h1&gt;Number of users&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pypl.github.io/PYPL.html"&gt;Popularity of Programming Languages&lt;/a&gt;: "The
  PYPL PopularitY of Programming Language Index is created by analyzing how
  often language tutorials are searched on Google.".  October 2017 - Python
  second at 17.6% (after Java); Matlab 11th on 2.2%.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tiobe.com/tiobe-index"&gt;TIOBE index&lt;/a&gt;: "The ratings are based on
  the number of skilled engineers world-wide, courses and third party vendors.
  Popular search engines such as Google, Bing, Yahoo!, Wikipedia, Amazon,
  YouTube and Baidu are used to calculate the ratings.".  Python 5th (after
  Java, C, C++, C#) at 3.9%.  Matlab 13th at 1.9%.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Trends&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.blog/2017/09/06/incredible-growth-python"&gt;The Incredible Growth of
  Python&lt;/a&gt;:
  analysis of StackOverflow search trends in high-income nations.  Python was
  the most visited tag of any language in June 2017, at around 10%, and has
  had 27% growth from 2016 to 2017, with a linear trend since 2012.  In
  contrast, Matlab was at 0.4% and had about an 18% drop from 2016 to 2017.
  Much of the growth of Python is in "data science" searches.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Range&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Data analysis: Python &amp;gt;&amp;gt; Matlab.  Matlab is not a serious contender in data
  science - see &lt;a href="https://datascience.stackexchange.com/tags"&gt;StackOverflow data science search
  tags&lt;/a&gt;.  Machine-learning is the
  top tag with 2173 questions, Python is second with 945 and Matlab is 52nd
  with 60 questions.&lt;/li&gt;
&lt;li&gt;Statistics: Python ~= Matlab.  Both have deficiencies.  Python has the major
  machine learning toolbox.&lt;/li&gt;
&lt;li&gt;Real-time programming: Python == Matlab ?
  (&lt;a href="http://www.psychopy.org/"&gt;Psychopy&lt;/a&gt; ==
  &lt;a href="http://psychtoolbox.org/"&gt;Psychtoolbox&lt;/a&gt; - they both claim roughly around
  12K active users: &lt;a href="http://www.psychopy.org/usage.php"&gt;Psychopy users&lt;/a&gt;,
  &lt;a href="https://en.wikipedia.org/wiki/Psychtoolbox_for_MATLAB"&gt;Psychtoolbox Wikipedia
  page&lt;/a&gt;);&lt;/li&gt;
&lt;li&gt;Shell scripting: Python &amp;gt;&amp;gt; Matlab;&lt;/li&gt;
&lt;li&gt;Tutorial and demo development: Python &amp;gt; Matlab (Jupyter Notebook);&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For an Imaging Course, students should be able to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;write simple command line scripts for handling files and directories;&lt;/li&gt;
&lt;li&gt;script their analyses in FSL and other packages;&lt;/li&gt;
&lt;li&gt;present stimuli for experiments;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Matlab isn't a good choice for the first two tasks.&lt;/p&gt;
&lt;h1&gt;Convenience&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://anaconda.org"&gt;Anaconda Python Installer&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;Python has no license manager.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Culture&lt;/h1&gt;
&lt;p&gt;Python is open-source.  This may be the reason for the following features of
its community:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;strong culture of testing and quality;&lt;/li&gt;
&lt;li&gt;well-developed packaging;&lt;/li&gt;
&lt;li&gt;tradition of users becoming contributors.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Employability&lt;/h1&gt;
&lt;p&gt;Python programming is a desirable skill in industry; &lt;a href="https://stackoverflow.com/jobs?sort=i&amp;amp;q=Python"&gt;Stackoverflow Jobs:
Python&lt;/a&gt; currently gives 721
hits, &lt;a href="https://stackoverflow.com/jobs?sort=i&amp;amp;q=Matlab"&gt;Stackoverflow Jobs:
Matlab&lt;/a&gt; gives 36.&lt;/p&gt;</content><category term="Programming"></category><category term="education"></category><category term="open source"></category><category term="free software"></category><category term="Matlab"></category><category term="Python"></category></entry><entry><title>Teaching easy, teaching simple</title><link href="http://asterisk.dynevor.org/teaching-simple.html" rel="alternate"></link><published>2016-12-09T12:00:00-08:00</published><updated>2016-12-09T12:00:00-08:00</updated><author><name>Matthew Brett</name></author><id>tag:asterisk.dynevor.org,2016-12-09:/teaching-simple.html</id><summary type="html">&lt;p&gt;We should teach for the long term using simple tools&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Easy and simple&lt;/h2&gt;
&lt;p&gt;I am going to use the definitions of "simple" and "easy" from &lt;a href="http://www.infoq.com/presentations/Simple-Made-Easy"&gt;this
talk&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Simple comes from Latin &lt;em&gt;simplex&lt;/em&gt; - one fold.  Simple is the opposite of
  &lt;em&gt;complex&lt;/em&gt;, which comes from the Latin for "twisted together".&lt;/li&gt;
&lt;li&gt;Easy comes from old French &lt;em&gt;aiser&lt;/em&gt; which in turn comes from the Latin
  &lt;em&gt;adjacens&lt;/em&gt; "lying close by" (&lt;sup id="fnref-oxford-dictionary"&gt;&lt;a class="footnote-ref" href="#fn-oxford-dictionary"&gt;1&lt;/a&gt;&lt;/sup&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;"Easy" is what you are familiar with. "Easy" is not far from something you
already know.&lt;/p&gt;
&lt;p&gt;"Simple" is when you have succeeded in breaking the problem into separate
component ideas.&lt;/p&gt;
&lt;h2&gt;Easy tools, simple tools&lt;/h2&gt;
&lt;p&gt;I use a general-purpose text editor for as many tasks as I can.  For the last
six years I have used Vim and Gvim; before that, I used Emacs.  Like many
powerful text editors, Vim and Emacs can be configured for editing many
different types of text files, including code in different languages.   For
example, I am using Vim to edit this text in Markdown format; Vim does
Markdown syntax highlighting.&lt;/p&gt;
&lt;p&gt;I had been using Emacs in this way for a long time before I read this advice
in the classic book "The Pragmatic Programmer" by Andrew Hunt and David Thomas
(2000):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Use a Single Editor Well&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The editor should be an extension of your hand; make sure your editor is
configurable, extensible, and programmable.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When I have a task that needs thought, I often sketch the code or text on a
piece of paper, then fill out the sketch in Vim.  For example, I wrote the
first draft of this post in an art notebook with large pages, and now I am
typing it up and editing in Vim.&lt;/p&gt;
&lt;p&gt;I use Vim to read and write:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;code in Python, C and MATLAB;&lt;/li&gt;
&lt;li&gt;papers or reference letters using LaTeX;&lt;/li&gt;
&lt;li&gt;tutorials in Restructured Text;&lt;/li&gt;
&lt;li&gt;presentations in Markdown / LaTeX;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To execute code I use the terminal command line, or the IPython Python
interpreter, which is also a terminal application.  I use command-line tools
like &lt;code&gt;make&lt;/code&gt; to build my papers and presentations.  In the days when I used
MATLAB daily, I preferred to start it in &lt;code&gt;-nodesktop&lt;/code&gt; mode, to disable most of
the graphical user interface.&lt;/p&gt;
&lt;p&gt;Very occasionally I use a specialized tool for a short task that does not need
much thought.   For example I sometimes use LibreOffice or OSX Pages to write
short letters, Keynote for a presentation with many graphics, or the Jupyter
notebook when I am experimenting with plots in Python, or when I am writing a
demonstration of code I already understand.&lt;/p&gt;
&lt;p&gt;As soon as the task needs some thought, I switch into my text editor. I do
this to relieve myself of the burden of using the richer and more complicated
interfaces of the other tools.  I am very familiar with my text editor, so I
no longer have to think how to do things like editing text.  With Vim, in
particular, I find that the cursor seems to follow my eyes; I have little or
no conscious sensation of what my hands are typing as they enter the commands
to move the cursor.&lt;/p&gt;
&lt;p&gt;I am sure I am not alone in finding it hard to think clearly.  If you give me
an interface that makes it easy to play with code in a sloppy and unstructured
way, I will.  Sometimes doing that is useful, but most of the time, giving in
to the temptation to play with code is disastrous for my clarity of thought.&lt;/p&gt;
&lt;p&gt;I think more clearly in Vim because I have used Vim enough that my hands and
my motor cortex can do the mechanical work of editing, leaving the rest of my
brain free for thinking (&lt;sup id="fnref-two-paths"&gt;&lt;a class="footnote-ref" href="#fn-two-paths"&gt;2&lt;/a&gt;&lt;/sup&gt;).  I do not have to interrupt my
concentration by moving my hands to the mouse or trackpad, because I can do
everything I need with the keyboard commands.  Using my text editor is simple,
because the task of editing is not entangled with the task of thinking.&lt;/p&gt;
&lt;h2&gt;Easy and simple in teaching&lt;/h2&gt;
&lt;p&gt;When we teach scientists to write and use code, new students are unlikely to
know a general-purpose text editor well, and may never have used a terminal
application.  It does not seem practical for them to learn to use an editor
and the terminal as well as the other new things we teach.  For that reason,
many courses give students an easy interactive environment such as the MATLAB
workspace, R Studio or the Jupyter Notebook.  The idea is that it makes it
easier for the students to concentrate on code rather than learning how to use
the tools.  In my experience, the students often continue using the easy tools
from the class, and do not go on to learn the simple tools that experts use.&lt;/p&gt;
&lt;p&gt;Some teachers do not believe that their students should be using the same
tools as the experts.  The argument is that scientists use and write code in a
different way from programmers, so they do not need the tools that a
programmer would choose.  If that argument were correct, that would be happy
for teachers, because the simple tools are hard to teach.&lt;/p&gt;
&lt;p&gt;I chose my tools to help me think clearly.  Does a scientist using code need
less clarity of thought than a programmer?  Your answer to this will probably
depend on your model of scientific practice.  If you think that a scientist
should spend most of their time exploring code and data in an informal way,
you might conclude that "easy" is acceptable, even desirable.  My own
experience of using tools like the Jupyter Notebook is that I cannot afford to
work in this way without exposing myself to great risk from ubiquitous error
and self-deception (&lt;sup id="fnref-ubiquitous-error"&gt;&lt;a class="footnote-ref" href="#fn-ubiquitous-error"&gt;3&lt;/a&gt;&lt;/sup&gt;).  If your experience of science is
like mine, you will probably prefer "simple".&lt;/p&gt;
&lt;p&gt;You might accept that scientists do need to learn the simple tools at some
point, but the constraints of your course do not allow you to spend time on
teaching tools.  Teaching the simple tools, would take too long.  In that case
you have to consider the potential for damage to the students' practice over
the long term.  If a student sees their teachers using easy tools, and
encouraging them to do the same, they are less likely to commit themselves to
the hard work necessary to learn the simple tools.  To quote a friend and
colleague: "It would be terrible if we make a generation of copy-paste
scientists".&lt;/p&gt;
&lt;p&gt;As I have taught more, I have put more effort into introducing students to the
simple tools right at the beginning of my course.  I want to teach students
tools that I would use myself.  We use the terminal to run bash and git
commands, the IPython console for exploring small code fragments, and a
full-featured text editor for editing code and documents.  In my &lt;a href="https://bic-berkeley.github.io/psych-214-fall-2016"&gt;most recent
course&lt;/a&gt; we used the Atom
text editor. Sometimes I do use the Jupyter Notebook for my own work, but I am
careful not to use it in class, because it is so addictive, and therefore
dangerous for someone new to coding.&lt;/p&gt;
&lt;h2&gt;Teach simple, not easy&lt;/h2&gt;
&lt;p&gt;Teaching always involves some degree of instruction that is implicit.  The
students take our working practice as a model of expertise.  This model can be
more more persuasive than anything else we teach.  We should use implicit and
explicit learning to teach effective practice.  Sound working practice is
the foundation on which we build; it is worth the cost in curriculum time to
show the benefit of simple, and the risks of easy.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn-oxford-dictionary"&gt;
&lt;p&gt;Oxford dictionary of Word origins edited by Julia
Cresswell.&amp;#160;&lt;a class="footnote-backref" href="#fnref-oxford-dictionary" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-two-paths"&gt;
&lt;p&gt;there is good neuroscientific evidence for this simple
distinction between habitual tasks and tasks that require conscious effort.
If you try and do two tasks that require conscious effort, they interfere with
one another so you cannot do both tasks well.  If you do an habitual task at
the same time as a task that requires conscious effort, the tasks interfere
much less.&amp;#160;&lt;a class="footnote-backref" href="#fnref-two-paths" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-ubiquitous-error"&gt;
&lt;p&gt;"The scientific method's central motivation is the
ubiquity of error - the awareness that mistakes and self-delusion can creep in
absolutely anywhere and that the scientist's effort is primarily expended in
recognizing and rooting out error" David L. Donoho &lt;em&gt;et al&lt;/em&gt; (2009)
"Reproducible research in computational harmonic analysis" Computing in
Science &amp;amp; Engineering 11 p8-18.&amp;#160;&lt;a class="footnote-backref" href="#fnref-ubiquitous-error" title="Jump back to footnote 3 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="Thinking"></category><category term="Teaching"></category><category term="Coding"></category></entry><entry><title>Who is reading?</title><link href="http://asterisk.dynevor.org/whos-reading.html" rel="alternate"></link><published>2016-08-22T00:50:00-07:00</published><updated>2016-08-22T00:50:00-07:00</updated><author><name>Matthew Brett</name></author><id>tag:asterisk.dynevor.org,2016-08-22:/whos-reading.html</id><summary type="html">&lt;p&gt;Bad smells from New Testament studies&lt;/p&gt;</summary><content type="html">&lt;p&gt;A few years ago I read the last book written by &lt;a href="https://en.wikipedia.org/wiki/John_Robinson_(bishop_of_Woolwich)"&gt;John A. T.
Robinson&lt;/a&gt;:
"The priority of John" (1985).&lt;/p&gt;
&lt;p&gt;It is an interesting book, and encouraging.  Robinson reflects on the details
of the stories and the timeline in John, and argues that the sources must be
close to the events; as close or closer than the sources of the synoptic
gospels.&lt;/p&gt;
&lt;p&gt;Stirred, I started to read some other books with the same theme.  The books I
am going to write about here are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;"Jesus and Judaism" (1985) by E. P. Saunders, ISBN 0-8006-2061-5 (JaJ);&lt;/li&gt;
&lt;li&gt;"Jesus within Judaism" (1988) by James H. Charlesworth, ISBN 0-385-23610-7 (JwJ);&lt;/li&gt;
&lt;li&gt;"Excavating Jesus" (2001) (revised and updated) by John Dominic Crossan and
  Jonathan L. Reed, ISBN 0-06-061634-2 (EJ).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When I was reading Robinson's book, I felt that I was listening to a
thoughtful man, well-read in the history and criticism of the Gospels, but
thinking beside and around that tradition.  Robinson seemed serious in his
desire to know what had happened, and how to think about it, from the
documents we have.&lt;/p&gt;
&lt;p&gt;Maybe this was also what it was like to talk with Robinson. In the preface of
JaJ, E. P. Saunders writes : "My dearest memories of 1982 are the evenings
spent in his [Robinson's] rooms discussing my work and his. [...] Here I can
only say that my life and work were greatly enhanced by him".&lt;/p&gt;
&lt;p&gt;I was hoping to have the same pleasure from reading JaJ, JwJ and EJ, but these
books were hard to read. I gave up on Saunders' book about a quarter of the
way through, for reasons I'll describe.  I read all of Charlesworth's book,
but felt rather miserable and tired when I finished it.  I'm still reading
"Excavating Jesus" but I often find myself skipping passages and snorting like
a buffalo.&lt;/p&gt;
&lt;p&gt;The reason these books are hard to read, is that they appear to be addressed
to a sensibility I do not share.  I wanted to hear the evidence, and consider
it carefully.  But these books evoke too much of their authors' worlds to be
comfortable.  As with many bad books, I started to feel embarrassed to be
looking at something public that should be private.&lt;/p&gt;
&lt;h2&gt;Jesus and Judaism (JaJ)&lt;/h2&gt;
&lt;p&gt;From the introduction, page 2:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To speak personally for a moment, I am interested in the debate about the
significance of the historical Jesus for theology in the way one is
interested in something that he once found fascinating.  The present work is
written without that question in mind, however, and those who wish an essay
on that topic may put this book down and proceed further along the shelf.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Why did Saunder's write that?   It was odd enough that Charlesworth quotes
this section in a footnote, introducing the quote with "Note how he maligns
theology" (footnote 8, page 28).  Why the slap-down for those who "wish an
essay on that topic"?  The passage seems too personal, too irritable.  It
makes one worry.&lt;/p&gt;
&lt;p&gt;Then the book develops its argument, which starts with the famous incident
where Jesus drives the money-changers out of the temple:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;On reaching Jerusalem, Jesus entered the temple courts and began driving out
those who were buying and selling there. He overturned the tables of the
money changers and the benches of those selling doves, and would not allow
anyone to carry merchandise through the temple courts.  And as he taught
them, he said, "Is it not written: 'My house will be called a house of
prayer for all nations'? But you have made it 'a den of robbers.'"&lt;/p&gt;
&lt;p&gt;-- &lt;cite&gt;Mark 11: 15-17, New International Version (NIV)&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;John's description of the same event ends with:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;His disciples remembered that it is written: "Zeal for your house will
consume me." (John 2:17 NIV).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The traditional interpretation of that passage, if you can call it an
interpretation, is that Jesus was purifying the temple from unclean commerce.
Saunder's doesn't believe that, because "the principal function of any temple
is to serve as a place of sacrifice, and [...] sacrifices &lt;em&gt;require&lt;/em&gt; the supply
of suitable animals" (p. 63). "The business arrangements around the temple
were &lt;em&gt;necessary&lt;/em&gt; if the commandments were to be obeyed" (p. 65). He has little
patience for the "purifying" interpretation of his fellow scholars and the
authors of the Gospel passages: "Just what would be left of the service if the
supposedly corrupting externalism of sacrifices, and the trade necessary to
them, were purged?  Here as often we see the failure to think concretely and a
preference for vague religious abstractions" (p.63).  This relates to the
strange sentence in the introduction to Saunders' book.  If Jesus was also
thinking in terms of vague religious abstractions, and Saunders rejects these
as foolish, then is he is going to find it hard to understand why Jesus was
acting as he did.&lt;/p&gt;
&lt;p&gt;Meanwhile, Saunders continues to address the silly idea of purification.  "New
Testament scholars who write about Jesus' concern for the purity of the temple
seem to have in mind a familiar Protestant idea: 'Pure' worship consists in
the Word, and all external rites should be purged" (p. 67-8).  Saunders' own
interpretation of the event is that "Jesus' action is to be regarded as a
symbolic demonstration [...] it symbolized destruction". (p. 69, 70).  "We
should suppose that Jesus &lt;em&gt;knew what he was doing&lt;/em&gt;: like others, he regarded
the sacrifices as commanded by God, he knew that they required a certain
amount of trade, and he knew that making a gesture toward disrupting the trade
represented an attack on the divinely ordained sacrifices" (p. 70). (all
italics in quotes are in the original).&lt;/p&gt;
&lt;p&gt;There are some obvious objections.  First is that the traditional
interpretation appears in the passage itself - "But you have made it 'a den of
robbers'".  Saunders rejects that passage as a later interpolation.  Even if
it is, presumably that was the dominant interpretation in the first few
centuries, so it doesn't seem likely that this interpretation was absurd to
its audience, as it is for Saunders.&lt;/p&gt;
&lt;p&gt;Another objection is the one Saunders gives on p. 70: "Professor Moule has
proposed to me that overturning one or more tables is not a self-evident
symbol of destruction [...] Would breaking something not have been a better
symbol?.  Perhaps so".&lt;/p&gt;
&lt;p&gt;Saunders is making a case.  It's not a convincing case, and he's making it too
strongly.  He dismisses his opponents on the way.  Why does he do this?  What
does he gain?  Who is he writing for?&lt;/p&gt;
&lt;p&gt;At this point I got cross. I didn't think that I was going to gain much
myself, and I went on to the slightly later book by Charlesworth.&lt;/p&gt;
&lt;h2&gt;Jesus within Judaism&lt;/h2&gt;
&lt;p&gt;This book was easier for me to read, but I was often uncomfortable.  It's a
little difficult to characterize why, but there were some obvious triggers.
The major one was a degree of pandering.  It takes the form of setting the
record straight, of putting weight on the opposite side of a balance, but that
means that the argument in the book, independent of the error it is trying to
correct, is - out of balance.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Centuries before the medieval craftsmen, the prayers of Jews were
denigrated. [...] The vision was distorted. It is time to acknowledge these
failures. [...]. A virtually unparalleled confession of unworthiness and of
sinfulness is found in the Prayer of Manesseh. Two verses should be quoted:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;And now behold I am bending the knees of my heart before you;
And I am beseeching your kindness;
I have sinned O Lord, I have sinned;
But I certainly know my sins.
(Vss 11-12 from the Syr.)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The author of this work must not be dismissed as a miserable wretch, or a
Jew who has committed sins.  He was conscious of his infirmities, and he
confessed the weaknesses that any introspective person sees daily. The
author was a devout Jew and a near contemporary of Jesus.&lt;/p&gt;
&lt;p&gt;JwJ pp 47-48.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;What Charlesworth does not mention, is that the &lt;a href="https://en.wikipedia.org/wiki/Prayer_of_Manasseh"&gt;Prayer of
Manesseh&lt;/a&gt; is written as from
the mouth of one of the most wretched of all the kings of Judah, condemned in
&lt;a href="http://www.mechon-mamre.org/p/pt/pt09b21.htm"&gt;2 Kings 21:1-17&lt;/a&gt;: "Moreover
Manasseh shed innocent blood very much, till he had filled Jerusalem from one
end to another; beside his sin wherewith he made Judah to sin, in doing that
which was evil in the sight of the LORD."  &lt;a href="http://www.mechon-mamre.org/p/pt/pt25b33.htm#12"&gt;2 Chronicles
33:12-13&lt;/a&gt; describes his
abject repentance: "And when he was in distress, he besought the LORD his God,
and humbled himself greatly before the God of his fathers.  And he prayed unto
Him; and He was entreated of him, and heard his supplication, and brought him
back to Jerusalem into his kingdom."&lt;/p&gt;
&lt;p&gt;Later in the same section we have:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[Jesus] probably taught his disciples a special prayer, which is
recognizable in the Lord's Prayer, said regularly by Christians today.
Jesus' prayer is strikingly similar to Jewish prayers, especially the
Qaddish, and his appeal to God to 'forgive our debts as we also forgive our
debtors' is not a 'Christian' invention, but a Jewish tradition reflected,
for example, in the Prayer of Manasseh.&lt;/p&gt;
&lt;p&gt;JwJ, p 50.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The Prayer of Manesseh is not particularly obscure; it reached the &lt;a href="http://www.kingjamesbibleonline.org/Prayer-of-Manasseh-Chapter-1"&gt;King James
Bible as part of the
Apocrypha&lt;/a&gt;;
Martin Luther included it in his 74-book translation of the Bible.  It's also
pretty short.  I don't know about you, but I can't see any reference to the
need to forgive my debtors in that prayer.  There are certainly similar
phrases between the Lord's Prayer and the &lt;a href="https://en.wikipedia.org/wiki/Kaddish"&gt;Mourning
Kaddish&lt;/a&gt;, ("May He establish His
kingdom", "from the Father who is in heaven (and earth)"), but nothing that I
can see about forgiving our debtors.&lt;/p&gt;
&lt;p&gt;I don't find it hard to believe that forgiving those who sin against me was a
common feature of 1st century Jewish prayer, but, if Charlesworth is taking
his readers seriously, surely he should give some evidence for that.&lt;/p&gt;
&lt;h2&gt;Excavating Jesus&lt;/h2&gt;
&lt;p&gt;The authors of EJ are a Biblical scholar (Crossman) and a New Testament
archaeologist (Reed).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The purpose of this book is to integrate the archeology of ground and the
exegesis of gospel by giving each its full explanatory power and by refusing
to privilege one over the other [...] If an ancient site is a series of
superimposed dwellings, an ancient gospel is a similar series of
superimposed overwritings.  In both cases, therefore, multiple layering is
the absolutely fundamental challenge to be faced.&lt;/p&gt;
&lt;p&gt;EJ pp xvii-xix.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;There are a few problems.  The first is that the book is rather overwritten,
and the metaphor of physical and textual layers quickly becomes tiring.  There
is some pandering.  The authors seem to trust their own judgment a great
further than the information allows.&lt;/p&gt;
&lt;p&gt;Chapter 2 is called "Layers upon layers upon layers".  It starts off with a
summary of the archeology of the town of Nazareth.  Nazareth at the time of
Jesus appears to have been a peasant village of a few hundred people.  Formal
synagogue buildings were rare in the region in the first century &lt;sup id="fnref-magdala"&gt;&lt;a class="footnote-ref" href="#fn-magdala"&gt;1&lt;/a&gt;&lt;/sup&gt;,
although "In places like Nazareth there were no doubt synagogues in the sense
of village gatherings and assemblies". "Best specific work on ancient literacy
in the Jewish homeland concludes about a 3 percent literacy rate".  With this
background, the two writers consider the story in Luke 4:16-30:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;He went to Nazareth, where he had been brought up, and on the Sabbath day he
went into the synagogue, as was his custom. He stood up to read, and the
scroll of the prophet Isaiah was handed to him.  Unrolling it, he found the
place where it is written: “The Spirit of the Lord is on me, because he has
anointed me to proclaim good news to the poor.  He has sent me to proclaim
freedom for the prisoners and recovery of sight for the blind, to set the
oppressed free, to proclaim the year of the Lord's favor.” Then he rolled up
the scroll, gave it back to the attendant and sat down. The eyes of everyone
in the synagogue were fastened on him. He began by saying to them, “Today
this scripture is fulfilled in your hearing.” All spoke well of him and were
amazed at the gracious words that came from his lips. "Isn't this Joseph's
son?" they asked.  Jesus said to them, “Surely you will quote this proverb
to me: ‘Physician, heal yourself!’ And you will tell me, ‘Do here in your
hometown what we have heard that you did in Capernaum.’” “Truly I tell you,”
he continued, “no prophet is accepted in his hometown. I assure you that
there were many widows in Israel in Elijah's time, when the sky was shut for
three and a half years and there was a severe famine throughout the land.
Yet Elijah was not sent to any of them, but to a widow in Zarephath in the
region of Sidon. And there were many in Israel with leprosy in the time of
Elisha the prophet, yet not one of them was cleansed — only Naaman the
Syrian.” All the people in the synagogue were furious when they heard this.
They got up, drove him out of the town, and took him to the brow of the hill
on which the town was built, in order to throw him off the cliff. But he
walked right through the crowd and went on his way.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The books explains the possible "layers" of gospel text - "Layer I contains
materials that go back to the historical Jesus in the late 20s. [...] Layer II
contains materials either adopted from that earlier layer or else created by
or within the ongoing tradition. [...]".  Layer III has three "sub-layers"
with the first being the Q Gospel and Mark; the second "most probably
dependent on these two preceding gospels, contains Matthew and Luke, from the
80s.  The third [sub-] level, quite possibly dependent on Mark, Matthew and
Luke, is the gospel of John.  That canonical process is, by the way, our most
secure evidence for layering as a gospel phenomenon" (p. 74).&lt;/p&gt;
&lt;p&gt;Then the authors argue that Luke made up the whole story from beginning to
end:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;With Luke 4:16-30 above, the conclusion was not just that early
first-century Nazareth had no synagogue building, no scrolls of Law and
Prophets, no literate and learned peasants, no nearby cliff, but also, and
more important, no murderous inhabitants.  Jesus' home villagers had never
attempted to kill him.  The story came, not from the original level of
Stratum I, but from the Lukan level of stratum IIIb.  That conclusion is
worth the trouble, not only for the historical accuracy, but also for the
honor and dignity of a tiny Jewish hamlet in a small country long, long ago.
Jesus did not grow up in a village of killers.&lt;/p&gt;
&lt;p&gt;EJ p. 73&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Is the strength of this conclusion justified?&lt;/p&gt;
&lt;p&gt;For the synagogue, Luke does not claim a large formal building, and the
authors have already agreed that some kind of synagogue meeting was likely.&lt;/p&gt;
&lt;p&gt;A first century synagogue meeting almost certainly involved readings from the
law and the prophets (&lt;sup id="fnref-philo-hypo"&gt;&lt;a class="footnote-ref" href="#fn-philo-hypo"&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;sup id="fnref-saunders-practice"&gt;&lt;a class="footnote-ref" href="#fn-saunders-practice"&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;sup id="fnref-levine-synagogue"&gt;&lt;a class="footnote-ref" href="#fn-levine-synagogue"&gt;4&lt;/a&gt;&lt;/sup&gt;).
Alan Millard (&lt;sup id="fnref-r-and-r-tj"&gt;&lt;a class="footnote-ref" href="#fn-r-and-r-tj"&gt;5&lt;/a&gt;&lt;/sup&gt;) estimates that a long scroll of Isaiah would have
cost around a week of a casual laborer's wages.&lt;/p&gt;
&lt;p&gt;The calculation of 3% literacy among Jews in first-century Palestine is based
on very flimsy evidence.  You can read the main evidence that Crossan cites in
more detail elsewhere at &lt;a href="https://faculty.biu.ac.il/~barilm/illitera.html"&gt;this web copy of the article&lt;/a&gt;.  Even if that were not so,
the 3% figure isn't very useful in estimating how likely it was that Jesus
could read.&lt;/p&gt;
&lt;p&gt;If I selected a 30 year old man from the USA at random, and asked you to guess
whether he had a degree in philosophy, you'd guess no.  You'd guess no because
you would find that &lt;a href="http://strongernation.luminafoundation.org/report/2016"&gt;40 percent of working age Americans have a
degree&lt;/a&gt;, and &lt;a href="http://www.humanitiesindicators.org/content/indicatorDoc.aspx?d=56&amp;amp;hl=philosophy&amp;amp;m=0"&gt;0.5% of
US degrees are philosophy
degrees&lt;/a&gt;.
That gives my randomly selected man a 2 in 1000 chance of having a philosophy
degree.  Now imagine I tell you that the person I have selected is a
well-known teacher of philosophy.  You are now interested in the proportion of
successful teachers of philosophy with a degree in philosophy.  You might
guess this proportion was somewhere over 50%, so about 250 times higher than
your original estimate.   See &lt;a href="http://www.patheos.com/blogs/bibleandculture/2011/11/02/reading-and-writing-in-herodian-israel-was-jesus-an-illiterate-peasant-part-one"&gt;this blog
post&lt;/a&gt;
for a summary of the evidence that Jesus had a detailed knowledge of the
scriptures.&lt;/p&gt;
&lt;p&gt;Next: "no nearby cliff". If you, like me, were ignorant of the geography of
Nazareth, and read the authors' dismissal of the "nearby cliff", you might
presume that Nazareth is pretty flat.  If so, the &lt;a href="http://www.goisrael.com/Tourism_Eng/Tourist%20Information/Discover%20Israel/Cities/Pages/Nazareth.aspx"&gt;Israeli tourist board
disagrees with
you&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Nazareth, in the lower Galilee, is located in the heart of a valley
surrounded by mountains.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You can check it out on Google earth and Google maps to get an idea.  In fact,
Nazareth has, as Luke says, some significant slopes, including the site
traditionally associated with the end of Luke's story, called &lt;a href="http://www.nazarethinfo.org/en/attractions/attractions/mount-precipice"&gt;Mount
Precipice&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So, Crossan and Reed could reasonably have said something like: "there is some
chance that there was no scroll to read from; there is some chance that Jesus
could not read; the nearby slopes don't seem quite dangerous enough for us to
believe the Nazarenes could really have hoped to kill Jesus by throwing him
down".  But what they actually wrote goes a long way past that.&lt;/p&gt;
&lt;p&gt;That brings me back to the question that I found myself asking for all three
of three books - who are the authors writing for?  Who is the polemic
addressed to?  Crossan and Reed give a some part of an answer in the text I've
already quoted:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;That conclusion is worth the trouble, not only for the historical accuracy,
but also for the honor and dignity of a tiny Jewish hamlet in a small
country long, long ago.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So, if you are the type of person who would uncritically condemn the Jews of
the first century, shame on you, and this book may give you pause for thought.
But, if that is not your sin, and you wanted a careful analysis of the
evidence, you will have to do a lot of your own research to evaluate the
arguments in this book.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn-magdala"&gt;
&lt;p&gt;In 2013, &lt;a href="http://www.pri.org/stories/2013-01-04/israeli-archeologists-discover-jesus-synagogue"&gt;archaeologists found a first century synagogue in
Magdala&lt;/a&gt;,
a fishing village on the shores of Lake Galilee.&amp;#160;&lt;a class="footnote-backref" href="#fnref-magdala" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-philo-hypo"&gt;
&lt;p&gt;Philo
&lt;a href="http://www.earlychristianwritings.com/yonge/book37.html"&gt;"Hypothetica"&lt;/a&gt; 7.13.&amp;#160;&lt;a class="footnote-backref" href="#fnref-philo-hypo" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-saunders-practice"&gt;
&lt;p&gt;E.P. Saunders, "Judaism: Practice and Belief, 63 BCE-66
CE" 2016, p 338.&amp;#160;&lt;a class="footnote-backref" href="#fnref-saunders-practice" title="Jump back to footnote 3 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-levine-synagogue"&gt;
&lt;p&gt;Lee I. Levine "The Nature and Origin of the Palestinian
Synagogue Reconsidered" Journal of Biblical Literature, Vol. 115 1996, p 432:
"For Jewish authors, the unique feature of synagogue worship was [...] the
public recitation and expounding of Holy Scriptures."&amp;#160;&lt;a class="footnote-backref" href="#fnref-levine-synagogue" title="Jump back to footnote 4 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-r-and-r-tj"&gt;
&lt;p&gt;Alan Millard, "Reading and Writing in the Time of Jesus" Vol.
69. NYU Press, 2000, p 165.&amp;#160;&lt;a class="footnote-backref" href="#fnref-r-and-r-tj" title="Jump back to footnote 5 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="History"></category><category term="Bible criticism"></category><category term="Academia"></category></entry><entry><title>How should we teach students to use computers?</title><link href="http://asterisk.dynevor.org/how-should-we-teach-computing.html" rel="alternate"></link><published>2016-08-19T12:00:00-07:00</published><updated>2016-08-19T12:00:00-07:00</updated><author><name>Matthew Brett</name></author><id>tag:asterisk.dynevor.org,2016-08-19:/how-should-we-teach-computing.html</id><summary type="html">&lt;p&gt;Teaching students for the long term&lt;/p&gt;</summary><content type="html">&lt;p&gt;The software carpentry movement has the aim of teaching scientists how to use
computers well.&lt;/p&gt;
&lt;p&gt;It is important to teach this so we can produce work of high quality.  It is
more likely that our work will be transparent enough for someone else to use
it, and reproduce it.&lt;/p&gt;
&lt;p&gt;Once we agree that it is useful to teach this, we still have to decide what we
are going to do about the following problem:&lt;/p&gt;
&lt;h2&gt;Difficult, tiring and confusing&lt;/h2&gt;
&lt;p&gt;Maintaining scientific software on your computer is a &lt;strong&gt;difficult, tiring and
confusing&lt;/strong&gt; task.  It is a task that needs a combination of commitment and
skill in solving problems where the solution may be hard to find and
understand, and there is a great deal of conflicting advice.&lt;/p&gt;
&lt;h2&gt;Two different approaches to teaching&lt;/h2&gt;
&lt;h3&gt;Approach 1: try to keep students away from the problem&lt;/h3&gt;
&lt;p&gt;Here, you design your course setup and course materials so that you avoid
confusion or ambiguity in installing or maintaining the software.&lt;/p&gt;
&lt;p&gt;For example, you might make all the students use Jupyter notebooks hosted on a
central server, so they don't use their own computers at all, except as a
client via their web-browser.&lt;/p&gt;
&lt;p&gt;You might use &lt;a href="https://wakari.io"&gt;Wakari&lt;/a&gt; to do the same kind of thing.&lt;/p&gt;
&lt;p&gt;Less comprehensively, you might insist or suggest that everyone use the same
Python distribution and packages, which will usually be Anaconda, so at least
everyone has roughly the same setup on their computer.  These packages are
usually easy to very easy to install and use, but don't protect you from later
confusion and pain for not-default packages.&lt;/p&gt;
&lt;p&gt;The advantage of this approach is that you get to spend your time teaching the
stuff you are interested in, instead of struggling with the complexity of
individual user installs.&lt;/p&gt;
&lt;p&gt;The disadvantage is that, as soon as the student leaves the class and starts
on the road to maturity, they will hit the problems that you have shielded
them from.  No matter what you told them in the class, they will conclude that
this work is much harder than you claimed, or that they are deficient and
should give up.&lt;/p&gt;
&lt;h3&gt;Approach 2: drop students in it and help them out again&lt;/h3&gt;
&lt;p&gt;The other approach is to treat the problem of installation and maintenance as
one that the students will have to learn to face.   They need to live in this
world of confusion and ambiguity, and learn the skills to survive and
flourish.&lt;/p&gt;
&lt;p&gt;There are two obvious difficulties with this approach.&lt;/p&gt;
&lt;p&gt;The first is that you will have to spend class time struggling with
installation and maintenance problems, that might well be - difficult, tiring
and confusing.  The time that you give to this, you must take from other
instruction.&lt;/p&gt;
&lt;p&gt;The second is that is hard to teach students these skills.  It is even hard to
explain what those skills are.&lt;/p&gt;
&lt;h2&gt;What's the best way?&lt;/h2&gt;
&lt;p&gt;When we decide what to do, we have to agree on a goal.  For example, your goal
might be to teach "data science" &lt;sup id="fnref-data-science-defined"&gt;&lt;a class="footnote-ref" href="#fn-data-science-defined"&gt;1&lt;/a&gt;&lt;/sup&gt;.  The students should
leave the class with a better understanding of issues in data science.  If
that is your entire goal, then you may not worry that the students will soon
stop using the tools that you have taught them.  No-one will blame you for
those priorities.&lt;/p&gt;
&lt;p&gt;On the other hand, your goal might be more broad.  You might want to make the
students better at data science in the long term - long after the students
have left your class.  In that case, you will worry about students being
unable to continue using the tools after the end of the class.&lt;/p&gt;
&lt;p&gt;I am personally more interested in the broader goal.  That is, I would like to
teach in way that makes it most likely that students will become mature users
of the tools they learn in class.  I believe that forces me towards approach
\2.  That is, I really do need to teach the students how to deal with the
difficult, tiring and confusing problem of maintaining their software.&lt;/p&gt;
&lt;p&gt;How should we deal with the issues of lost class time, and teaching the
unteachable skill of learning within confusion?   I believe the only way to do
this is to teach by example.  That is, we have to give the students something
similar to standard installation advice - the kind of advice that we would
give our own graduate students getting started.  Then we have to sit down with
the students who run into problems, and suffer with them for a while.  We show
them how we try and solve the problem, we do our diagnostics, we check
StackOverflow, we look at the command help and man pages, and we work it out,
with them.   Yes, this is very hard to do with large classes or MOOCs.  With
smaller classes, or with a reasonable number of teaching assistants, I believe
this is practical.&lt;/p&gt;
&lt;p&gt;The advantage of doing this, is that we show our students what real scientific
computing looks like.  It isn't streamlined, smooth or easy, it is hard
confusing and complex.  We give our students our best if we teach them to be
comfortable and optimistic on this, our current frontier.&lt;/p&gt;
&lt;h2&gt;Don't agree? - we should test&lt;/h2&gt;
&lt;p&gt;I've asserted that approach 2 will cause more students to develop into mature
users of scientific computing.&lt;/p&gt;
&lt;p&gt;Maybe that isn't true.  Maybe, if we use approach 1 to the fullest extent,
this will get students so excited about the possibilities of the tools, that
this will impel them to overcome all later obstacles.&lt;/p&gt;
&lt;p&gt;I think that won't happen, but I'm a scientist, I could be wrong, and that's
an empirical question.&lt;/p&gt;
&lt;p&gt;What we should do is have a randomized controlled trial.  Allocate half the
students to approach 1, and half to approach 2.   Design an assessment of
their computing maturity and assess the students at 1 and 2 years after the
course.  I predict that students taught with approach 2 will be doing better
on average.  You might predict the opposite.  Let's get data.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn-data-science-defined"&gt;
&lt;p&gt;I have heard it said, that data science can
reasonably be defined as "doing statistics on a Mac".&amp;#160;&lt;a class="footnote-backref" href="#fnref-data-science-defined" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="Teaching"></category><category term="Coding"></category></entry><entry><title>Why do researchers write sloppy code?</title><link href="http://asterisk.dynevor.org/love-letter.html" rel="alternate"></link><published>2016-01-15T14:00:00-08:00</published><updated>2016-01-15T14:00:00-08:00</updated><author><name>Matthew Brett</name></author><id>tag:asterisk.dynevor.org,2016-01-15:/love-letter.html</id><summary type="html">&lt;p&gt;A love letter to the computer&lt;/p&gt;</summary><content type="html">&lt;p&gt;A friend of mine teaches a subject that involves scientific programming.  He
has several times told me that he is surprised at some of the work that
students turn in.  He tells me that it is often messy and badly written.
Despite his clear instructions, the code often does not run as written and may
have very obvious syntax errors, commented out lines for debugging and other
work-in-progress cruft.  He wonders why the students turn in such bad code,
when they would be much more careful turning in a mathematical proof.&lt;/p&gt;
&lt;p&gt;This reminds me of a quote that I read a long time since, and have just found
again in the famous "Code Complete" (&lt;sup id="fnref-code-complete"&gt;&lt;a class="footnote-ref" href="#fn-code-complete"&gt;1&lt;/a&gt;&lt;/sup&gt;).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In the early years of programming, a program was regarded as the private
property of the programmer. One would no more think of reading a colleague's
program unbidden than of picking up a love letter and reading it. This is
essentially what a program was, a love letter from the programmer to the
hardware, full of the intimate details known only to partners in an affair.
Consequently, programs became larded with the pet names and verbal shorthand
so popular with lovers who live in the blissful abstraction that assumes
that theirs is the only existence in the universe. Such programs are
unintelligible to those outside the partnership.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(Attributed to Michael Marcotty).&lt;/p&gt;
&lt;p&gt;Students producing proofs in math have had a lot of practice in making the
proof easy to follow.  They know that the proof is for the teacher or grader,
and they write the proof for them.&lt;/p&gt;
&lt;p&gt;Students do not have the same feeling about code.  For them, code is a private
conversation between them and the computer.  If the computer does what we
want, at least once, then the conversation that led to up that is outside the
scope of public comment. The fact that the computer did what we wanted is the
equivalent of the mathematical proof, and the code that made that happen is
equivalent to the working notes for the proof.&lt;/p&gt;
&lt;p&gt;That way of thinking is surprising to someone who has spent time developing
software, because we know that we make many mistakes, and that, to reduce the
number of mistakes, we need to lay out our reasoning in code, for others to
check.&lt;/p&gt;
&lt;p&gt;One difference between the developer and the student is that the developer
knows that their code has to give the right answer in a range of
circumstances, over a fairly long period of time, and on different types of
computers.  To defend ourselves, we ask "is this code correct?".  If we want a
good answer to this question, we have to write code that others can follow and
criticize. The student usually has a different task, which is to get the
computer to give a small number of required outputs.  Their question is "does
this code give the required outputs in the situations for which I will be
graded".  For that question, code quality is irrelevant.&lt;/p&gt;
&lt;p&gt;That is a damn shame, because in due course, the student may go on to do
research.  Their work will very likely involve some kind of coding.  They have
learned that the point of coding is to get the desired result.  They write
terrible, poorly organized code, that is full of errors, hard to read, and
dangerous to re-use.  After some editing, the code produces a plausible
answer, but it is likely to be wrong, because, as every experienced coder
knows, &lt;a href="http://blog.nipy.org/ubiquity-of-error.html"&gt;coders make errors all the
time&lt;/a&gt;.  The researcher can only
know the answer is wrong if they know the code is wrong, but that is something
that they have no instinct to investigate.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn-code-complete"&gt;
&lt;p&gt;Steve McConnell "Code Complete, second edition" (2004) p842.
Microsoft Press.&amp;#160;&lt;a class="footnote-backref" href="#fnref-code-complete" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="Thinking"></category><category term="Teaching"></category><category term="Coding"></category></entry><entry><title>Makes-sense epistemology</title><link href="http://asterisk.dynevor.org/makes-sense.html" rel="alternate"></link><published>2016-01-15T14:00:00-08:00</published><updated>2016-01-15T14:00:00-08:00</updated><author><name>Matthew Brett</name></author><id>tag:asterisk.dynevor.org,2016-01-15:/makes-sense.html</id><summary type="html">&lt;p&gt;Something that looks like understanding&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've spend the last two years doing a reasonable amount of teaching.&lt;/p&gt;
&lt;p&gt;I suppose that every teacher wonders whether the students are really
"understanding" what we teach.  This begs the question of what we mean by
understanding.&lt;/p&gt;
&lt;p&gt;One effect of doing a lot of teaching, has been that I have found that I
did not understand some things that I thought I did understand.  A particular
example is Principal Components Analysis (PCA).  I think I do understand it
now, but I did not before.  I have taught something about PCA in the past, and
I think I was saying things that were true, but I didn't know why they were
true.&lt;/p&gt;
&lt;p&gt;What had happened was that I had heard other people that I trust say these
things about PCA.  I heard the same thing a few times from a few different
people, and I added what they said to the store of things I "knew".&lt;/p&gt;
&lt;p&gt;In my case, I think I was using what Perkins, Allen and
Hafner call "makes-sense epistemology" (&lt;sup id="fnref-perkins-allen-hafner"&gt;&lt;a class="footnote-ref" href="#fn-perkins-allen-hafner"&gt;1&lt;/a&gt;&lt;/sup&gt;).  Someone
using makes-sense epistemology is not reasoning or criticizing what they have
heard. They are not asking "could that be wrong?".  Their criterion for
accepting an argument is that the argument feels right or makes sense.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Naive reasoners might be said to have a "makes-sense epistemology."  Of
course this does not mean that they have an explicit philosophy about what
grounds are necessary for belief.  But it does mean something in terms of
the manifested behavior:  such reasoners act as though the test of truth is
that a proposition makes intuitive sense, sounds right, rings true.  They
see no need to criticize accounts that do make sense - the intuitive feel of
fit suffices.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It seems to me that teachers are often in the situation where they cannot or
do not hope to teach the students &lt;em&gt;why&lt;/em&gt; something is true, but only give them
a &lt;em&gt;feeling&lt;/em&gt; for why something &lt;em&gt;might&lt;/em&gt; be true.  When we do this, we encourage
makes-sense epistemology.&lt;/p&gt;
&lt;p&gt;Does it matter that we often function on this intuitive makes-sense level?
Not if we think that most of what we are told is true.  But, as Richard
Feynman put it: "Science is the belief in the ignorance of experts."
(&lt;sup id="fnref-ignorance"&gt;&lt;a class="footnote-ref" href="#fn-ignorance"&gt;2&lt;/a&gt;&lt;/sup&gt;).&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn-perkins-allen-hafner"&gt;
&lt;p&gt;Perkins, David N., Richard Allen, and James Hafner.
"Difficulties in everyday reasoning." Thinking: The expanding frontier (1983):
177-189. See: &lt;a href="https://books.google.com/books?id=QAFiGGJdoY8C&amp;amp;lpg=PP1&amp;amp;dq=editions%3ASA6JOdbqOxMC&amp;amp;pg=PA177#v=onepage&amp;amp;q&amp;amp;f=false"&gt;preview in Google
books&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-perkins-allen-hafner" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-ignorance"&gt;
&lt;p&gt;Address &lt;a href="http://www.fotuva.org/feynman/what_is_science.html"&gt;"What is
Science?"&lt;/a&gt;, presented at
the fifteenth annual meeting of the National Science Teachers Association, in
New York City (1966), published in The Physics Teacher, volume 7, issue 6
(1969), p. 313-320&amp;#160;&lt;a class="footnote-backref" href="#fnref-ignorance" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="Thinking"></category><category term="Teaching"></category><category term="Epistemology"></category></entry><entry><title>The XFree / X.Org fork and open source governance</title><link href="http://asterisk.dynevor.org/xfree-forked.html" rel="alternate"></link><published>2013-06-25T16:00:00-07:00</published><updated>2013-06-25T16:00:00-07:00</updated><author><name>Matthew Brett</name></author><id>tag:asterisk.dynevor.org,2013-06-25:/xfree-forked.html</id><summary type="html">&lt;p&gt;A short history of the XFree86 / X.org fork and some interpretations&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Why a history of the X.org fork?&lt;/h2&gt;
&lt;p&gt;Forks are experiments in open-source management (&lt;sup id="fnref-oss-why-fork"&gt;&lt;a class="footnote-ref" href="#fn-oss-why-fork"&gt;1&lt;/a&gt;&lt;/sup&gt;).&lt;/p&gt;
&lt;p&gt;Management in open-source can be mysterious. In our technical world, we would
rather believe that anything important must be technical, and management seems
soft and poorly defined. We want to believe that all you need is good code,
and that management is for corporate types, whom we despise.&lt;/p&gt;
&lt;p&gt;A fork is interesting because it usually comes about when one group of
developers thinks that they can do a better job managing a project than the
current group in charge.&lt;/p&gt;
&lt;p&gt;The group doing the fork takes a risk, because forking is violation of the
code of honor. The group will probably have to start under a new project and
package name, and then compete with the old project for users.&lt;/p&gt;
&lt;p&gt;If the fork fails and the old project succeeds, it is difficult to draw
conclusions about which project had better management, because of the inertia
bias against the fork.  If both fail, the project may have already been doomed
by bad code or changes in fashion. If both succeed, the forkers were right
enough about the management to survive the resistance to forking.  The most
interesting outcome is where the fork succeeds and the original project fails.
In this case we may be able to conclude that there really was a problem with
the old management that has been fixed by the fork.&lt;/p&gt;
&lt;p&gt;The X.org fork of XFree86 is particularly interesting because, after the fork,
XFree86 went into steep decline and died, to be fully replaced by X.org. There
may be interesting lessons we can learn from why the fork happened.&lt;/p&gt;
&lt;p&gt;I've set out the background in some detail because I think it is important to
be able to understand motivations and arguments of the actors in the fork
drama.  The royalist defenders of the status quo and the revolutionaries
behind the fork make the same kind of arguments that I have seen often and
recently.  Maybe seeing these arguments together with their outcome will help
make our own discussions easier to think about and better informed.&lt;/p&gt;
&lt;h2&gt;A sketch of early X history with some dramatis personae&lt;/h2&gt;
&lt;p&gt;&lt;sup id="fnref-wp-x-history"&gt;&lt;a class="footnote-ref" href="#fn-wp-x-history"&gt;2&lt;/a&gt;&lt;/sup&gt; attributes the original idea for X to Jim Gettys and Bob
Scheifler at MIT in 1984.&lt;/p&gt;
&lt;p&gt;MIT released version X10R3 under what later became known as the MIT license in
1986.&lt;/p&gt;
&lt;p&gt;MIT handed over stewardship to a newly formed MIT X consortium in 1988.  The
consortium hired Jim Fulton, Keith Packard in early 1988, with others joining
later in the year.&lt;/p&gt;
&lt;p&gt;The development of XFree86 itself started as a fork. Thomas Roell developed
the first X implementation for the Intel 386 chip, called X386. He donated the
code to the X consortium and this code was part of the X11R5 release in 1991
(&lt;sup id="fnref-wp-x-history"&gt;&lt;a class="footnote-ref" href="#fn-wp-x-history"&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;sup id="fnref-xfree86-history"&gt;&lt;a class="footnote-ref" href="#fn-xfree86-history"&gt;3&lt;/a&gt;&lt;/sup&gt;).  Roell then took a job with a company
called SGCS and further versions of his X386 code were not open source
(&lt;sup id="fnref-rebel-code"&gt;&lt;a class="footnote-ref" href="#fn-rebel-code"&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;sup id="fnref-wp-x386"&gt;&lt;a class="footnote-ref" href="#fn-wp-x386"&gt;5&lt;/a&gt;&lt;/sup&gt;).  A group of programmers found they were maintaining
the original open-source version of X386 and joined together to form a fork of
X386 called "XFree86" (&lt;sup id="fnref-xfree86-announce"&gt;&lt;a class="footnote-ref" href="#fn-xfree86-announce"&gt;13&lt;/a&gt;&lt;/sup&gt;). XFree86 was a joke from the X386
name. The original team for XFree86 was David Dawes, Glenn Lai, Jim Tsillas
and David Wexelblat (&lt;sup id="fnref-xfree86-announce"&gt;&lt;a class="footnote-ref" href="#fn-xfree86-announce"&gt;13&lt;/a&gt;&lt;/sup&gt;).&lt;/p&gt;
&lt;p&gt;In order to get access to the development versions of the reference
X-consortium code, XFree86 needed to be a member of the X-consortium.  To do
this, XFree86 formed a corporation called "XFree86 inc" in January 1994.
XFree86 inc then asked for donations for X-consortium membership, and joined
(&lt;sup id="fnref-xfree86-history"&gt;&lt;a class="footnote-ref" href="#fn-xfree86-history"&gt;3&lt;/a&gt;&lt;/sup&gt;).&lt;/p&gt;
&lt;p&gt;At least by May 1994, XFree86 had a BSD-like governance, with a core group and
a board of directors.  The board of directors was David Dawes, Glenn Lai, Dirk
Hohndel, Rich Murphey, Jon Tombs, Jim Tsillas, and David Wexelblat
(&lt;sup id="fnref-xfree-inc-minutes"&gt;&lt;a class="footnote-ref" href="#fn-xfree-inc-minutes"&gt;6&lt;/a&gt;&lt;/sup&gt;).  The core group was the same as or similar to the
board of directors at this stage (&lt;sup id="fnref-core-board-1994"&gt;&lt;a class="footnote-ref" href="#fn-core-board-1994"&gt;7&lt;/a&gt;&lt;/sup&gt;).&lt;/p&gt;
&lt;p&gt;In November 1994 David Wexelblat handed over the XFree86 board presidency to
David Dawes (&lt;sup id="fnref-president-dawes"&gt;&lt;a class="footnote-ref" href="#fn-president-dawes"&gt;8&lt;/a&gt;&lt;/sup&gt;). Dawes continued as president at least until
2015 (&lt;sup id="fnref-current-bod"&gt;&lt;a class="footnote-ref" href="#fn-current-bod"&gt;9&lt;/a&gt;&lt;/sup&gt;).&lt;/p&gt;
&lt;p&gt;In 1997, the X-consortium handed over X stewardship to a vendor group called
"The Open Group". In April 1998, the Open Group changed the X license to
require commercial entities to &lt;a href="http://old.lwn.net/lwn/1998/0409/xstate.html"&gt;pay a license
fee&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Although [XFree86] may be able to claim several million users, the net
contribution to the development of the X Window System, as embodied by
specs, protocols or cash is a flat zero.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;XFree86 decided to continue development without using any new code from the
Open Group reference implementation, in order to avoid the new license. At the
same time, the Open Group X development stalled (&lt;sup id="fnref-xfree86-history"&gt;&lt;a class="footnote-ref" href="#fn-xfree86-history"&gt;3&lt;/a&gt;&lt;/sup&gt;) leaving
XFree86 to become the de-facto reference implementation.  The Open Group
reverted to the old license in September 1998, and formed a new consortium for
X stewardship called X.Org in 1999 (&lt;sup id="fnref-wp-x-history"&gt;&lt;a class="footnote-ref" href="#fn-wp-x-history"&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;sup id="fnref-xorg-consortium"&gt;&lt;a class="footnote-ref" href="#fn-xorg-consortium"&gt;10&lt;/a&gt;&lt;/sup&gt;). X.Org
(the consortium) went on to supervise the releases of the X reference
implementation.  XFree86 joined the X.Org consortium as an honorary member in
the same year.&lt;/p&gt;
&lt;p&gt;An article in 2001 said "Today, XFree86 is considered to be among the most
successful open source projects in existence." (&lt;sup id="fnref-xfree86-history"&gt;&lt;a class="footnote-ref" href="#fn-xfree86-history"&gt;3&lt;/a&gt;&lt;/sup&gt;).&lt;/p&gt;
&lt;p&gt;By 1999 the board of directors was unchanged apart from the additions of Robin
Cutshaw and Marc Evans (&lt;sup id="fnref-readme-3.3.6"&gt;&lt;a class="footnote-ref" href="#fn-readme-3.3.6"&gt;11&lt;/a&gt;&lt;/sup&gt;).&lt;/p&gt;
&lt;p&gt;By February 2003 the "core" group was 16 people, of which 7 were also on the
board of directors (at least as of 1999) (&lt;sup id="fnref-man-4.3.0"&gt;&lt;a class="footnote-ref" href="#fn-man-4.3.0"&gt;12&lt;/a&gt;&lt;/sup&gt;&lt;sup id="fnref-coreteam"&gt;&lt;a class="footnote-ref" href="#fn-coreteam"&gt;15&lt;/a&gt;&lt;/sup&gt;).&lt;/p&gt;
&lt;p&gt;Now we're ready for the events around the fork.&lt;/p&gt;
&lt;h2&gt;Background to the fork&lt;/h2&gt;
&lt;p&gt;Although XFree86 had a development CVS repository, it was only available to
those granted "membership" of the project.  The development mailing lists were
also not public (&lt;sup id="fnref-kp-lwn-interview"&gt;&lt;a class="footnote-ref" href="#fn-kp-lwn-interview"&gt;16&lt;/a&gt;&lt;/sup&gt;).  This had been forced on the project
because of the initial contract with the X consortium.  After the Open Group
had tried and failed to change the license, it appears that this was no longer
necessary, but nevertheless continued to be the case until Keith Packard
joined the project (&lt;sup id="fnref-kp-lwn-interview"&gt;&lt;a class="footnote-ref" href="#fn-kp-lwn-interview"&gt;16&lt;/a&gt;&lt;/sup&gt;).&lt;/p&gt;
&lt;p&gt;Keith Packard started to work on XFree86 at the end of 1999 as an employee of
SuSE. He became a member of the XFree86 core in the same year (&lt;sup id="fnref-coreteam"&gt;&lt;a class="footnote-ref" href="#fn-coreteam"&gt;15&lt;/a&gt;&lt;/sup&gt;). He
moved to the Cambridge Research Laboratory to work for Compaq / HP at the end
of 2001 and continued to work on XFree86. Among his contributions were the
&lt;a href="http://en.wikipedia.org/wiki/X_Rendering_Extension"&gt;Render extension&lt;/a&gt;, (with
Jim Gettys) the &lt;a href="http://en.wikipedia.org/wiki/RandR"&gt;XRandR
extension&lt;/a&gt;(&lt;sup id="fnref-xrandr-man"&gt;&lt;a class="footnote-ref" href="#fn-xrandr-man"&gt;18&lt;/a&gt;&lt;/sup&gt;), (with Carl
Worth) the &lt;a href="http://en.wikipedia.org/wiki/Cairo_(graphics)"&gt;Cairo rendering
library&lt;/a&gt; and the &lt;a href="http://en.wikipedia.org/wiki/Fontconfig"&gt;fontconfig
library&lt;/a&gt; (&lt;sup id="fnref-kp-resume"&gt;&lt;a class="footnote-ref" href="#fn-kp-resume"&gt;17&lt;/a&gt;&lt;/sup&gt;).&lt;/p&gt;
&lt;p&gt;Packard successfully lobbied for open read access to the CVS repository, and
moving at least some of the development discussion to public mailing lists.
He said that some of the development discussion continued to be on private
mailing lists (&lt;sup id="fnref-kp-lwn-interview"&gt;&lt;a class="footnote-ref" href="#fn-kp-lwn-interview"&gt;16&lt;/a&gt;&lt;/sup&gt;).&lt;/p&gt;
&lt;p&gt;Over a period of years before 2003 there seems have been considerable
frustration at the slow pace of XFree86 development, and the difficulty of
getting patches accepted.  Mike Harris was a Redhat developer working on
XFree86.  He complained in a blog post of very slow or completely failed patch
review, even from vendors like ATI, and the very small number of developers
with CVS write access given the size of the project (&lt;sup id="fnref-mh-blog"&gt;&lt;a class="footnote-ref" href="#fn-mh-blog"&gt;19&lt;/a&gt;&lt;/sup&gt;).  In a
follow-up post he records his surprise at the level of support he had got for
his blog post by email (&lt;sup id="fnref-mh-blog-fu"&gt;&lt;a class="footnote-ref" href="#fn-mh-blog-fu"&gt;20&lt;/a&gt;&lt;/sup&gt;).  A KDE developer agreed later that
there was a widespread impression of XFree86 as a slow and unresponsive
project (&lt;sup id="fnref-kp-issue"&gt;&lt;a class="footnote-ref" href="#fn-kp-issue"&gt;21&lt;/a&gt;&lt;/sup&gt;). Others had similar complaints
(&lt;sup id="fnref-forum-communication"&gt;&lt;a class="footnote-ref" href="#fn-forum-communication"&gt;22&lt;/a&gt;&lt;/sup&gt;&lt;sup id="fnref-debian-xfree86-pain"&gt;&lt;a class="footnote-ref" href="#fn-debian-xfree86-pain"&gt;23&lt;/a&gt;&lt;/sup&gt;).&lt;/p&gt;
&lt;p&gt;Packard felt that he had been gradually excluded from XFree86 management:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;My ability to contribute to the project was severely curtailed in stages,
first administration of the public server, next permission to represent
XFree86 to other groups, then administration of the public mailing lists, and
finally CVS access.  (&lt;sup id="fnref-kp-lwn-interview"&gt;&lt;a class="footnote-ref" href="#fn-kp-lwn-interview"&gt;16&lt;/a&gt;&lt;/sup&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;He lost CVS access when he committed the XFIXES extension to CVS in November
2002:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I've stuck these features into a new XFIXES extension and included that in
XFree86 CVS so that others might see the code and specification and test
whether they solve the issues they're supposed to.  This does not represent
any endorsement by the XFree86 project or it's [sic] members (other than
me), nor any assurance that the extension will be included in future XFree86
releases.  (&lt;sup id="fnref-xfixes-announce"&gt;&lt;a class="footnote-ref" href="#fn-xfixes-announce"&gt;24&lt;/a&gt;&lt;/sup&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The extension appears to have been disabled by default (&lt;sup id="fnref-xfixes-disabled"&gt;&lt;a class="footnote-ref" href="#fn-xfixes-disabled"&gt;25&lt;/a&gt;&lt;/sup&gt;).&lt;/p&gt;
&lt;p&gt;It seems the commit of XFIXES was just before a release feature freeze.  Some
process occurred by which Packard lost his CVS commit rights on the basis that
he should have discussed the changes before committing (&lt;sup id="fnref-kp-no-cvs"&gt;&lt;a class="footnote-ref" href="#fn-kp-no-cvs"&gt;28&lt;/a&gt;&lt;/sup&gt;).  David
Dawes refers to a rumor that Packard did this in order to cause a crisis
(&lt;sup id="fnref-kp-xfixes-rumor"&gt;&lt;a class="footnote-ref" href="#fn-kp-xfixes-rumor"&gt;29&lt;/a&gt;&lt;/sup&gt;).  There does not appear to be any public record of this
decision at the time.&lt;/p&gt;
&lt;h2&gt;The forking fighting&lt;/h2&gt;
&lt;p&gt;In March 2003, David Dawes used an email asking for public discussion of
XFree86 to announce that the XFree86 board of directors had expelled Keith
Packard from the core group (&lt;sup id="fnref-kp-is-out"&gt;&lt;a class="footnote-ref" href="#fn-kp-is-out"&gt;26&lt;/a&gt;&lt;/sup&gt;):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It has been brought to the attention of the XFree86 Core Team that one of
its members, Keith Packard, has been actively (but privately) se)eking out
support for a fork of XFree86 that would be led by himself.  He is also in
the process of forming a by-invitation-only group of vested interests to
discuss privately concerns he has about XFree86 and the future of X.  He has
consistently refused to even disclose these concerns within the context of
the XFree86 Core Team, which makes his membership of that team unviable.  As
a consequence, Keith Packard is no longer a member of the XFree86 Core Team.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The board claimed to have email evidence of Packard's intentions, but that
they were unable to release this evidence because the emails were private and
Packard had asked for them not to be released (&lt;sup id="fnref-dw-have-cause"&gt;&lt;a class="footnote-ref" href="#fn-dw-have-cause"&gt;30&lt;/a&gt;&lt;/sup&gt;). Packard
responded with permission to release the mails (&lt;sup id="fnref-kp-release-emails"&gt;&lt;a class="footnote-ref" href="#fn-kp-release-emails"&gt;31&lt;/a&gt;&lt;/sup&gt;) and David
Wexelblat, for the board, said that they would release some version of the
emails soon after (&lt;sup id="fnref-dw-well-try"&gt;&lt;a class="footnote-ref" href="#fn-dw-well-try"&gt;32&lt;/a&gt;&lt;/sup&gt;).  I could find no evidence that this
happened. It's possible that the email enclosed in (&lt;sup id="fnref-private-cced"&gt;&lt;a class="footnote-ref" href="#fn-private-cced"&gt;33&lt;/a&gt;&lt;/sup&gt;) is an
example of the discussion leading to Packard's expulsion.&lt;/p&gt;
&lt;p&gt;Packard didn't reply directly to the thread expelling him from the core, but
instead posted an appeal for open governance of XFree86 (&lt;sup id="fnref-call-for-open"&gt;&lt;a class="footnote-ref" href="#fn-call-for-open"&gt;27&lt;/a&gt;&lt;/sup&gt;).  He
lists four problems:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Limited development resources&lt;/li&gt;
&lt;li&gt;Slow release schedules&lt;/li&gt;
&lt;li&gt;Lack of cooperation with other projects&lt;/li&gt;
&lt;li&gt;Opacity of development processes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Packard thought that this was a problem of governance:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;While the XFree86 Board of Directors is nominally in charge of XFree86, they
have absented themselves from governing the project and left that to the
XFree86 Core Team. The community is left wondering who is actually in charge
of XFree86. As a result, community trust in XFree86 leadership has suffered.
Decisions appear to be arbitrary and are not seen to reflect the will of the
community. The leadership has no accountability to the community: thus
community members have no ability to change project direction and the Board
has little incentive to do so.  In addition, the lack of clear formal
policies has made it difficult to resolve disputes when the usual consensus
breaks down.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;He appealed to the board of directors for a change in governance:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There are many ways to move from our current position to one of community
control, but for XFree86 to make the transition, the current Board of
Directors must have a desire to do so. I encourage the X community to
support a community government for X development and hope the XFree86 Board
will adopt this model.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The subsequent discussion was often bad-tempered.&lt;/p&gt;
&lt;p&gt;An early reply by Alan Hourihane blamed 'limited development resources' on the
difficulty of the codebase, and emphasized the previous work of David Dawes:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;As for the rest of the above. I'd urge people to think of how XFree86 has
got were it has - under the directive of the current team, headed by David
Dawes. David has worked tirelessly in his own time to bring XFree86 where it
is today. And I applaud him for that devotion. (&lt;sup id="fnref-hourihane1"&gt;&lt;a class="footnote-ref" href="#fn-hourihane1"&gt;34&lt;/a&gt;&lt;/sup&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;David Dawes' employer, the CEO of Tungsten graphics (&lt;sup id="fnref-dawes-tungsten"&gt;&lt;a class="footnote-ref" href="#fn-dawes-tungsten"&gt;36&lt;/a&gt;&lt;/sup&gt;) saw
problems in the organization of XFree86:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We are seeing Keith Packard, a loyal and dedicated XFree86 contributor,
publicly express his frustration with an organization in which he has more
personal control than the vast majority of other people whose livelihood
depends on XFree86's continued success.  David Dawes has turned to that
constituency to assist him in resolving this situation.  Both of these
actions imply there is an organizational problem within XFree86 itself.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;He asked for greater democracy in governing the project:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The best organizational model I know of that adequately addresses both the
need to have managers who are the most knowledgeable and willing to work,
and the need to have a mechanism for all interested parties to voice their
concerns, is a representative democracy.  XFree86 has historically resisted
that model.  The increasing ubiquity of XFree86 has widened the discrepancy
between the desires of its constituency and those of its managing cadre.
Under those circumstances, a fork was inevitable.  There is currently no way
for dissenting voices to have an opportunity to fairly affect the direction
of XFree86, no matter what percentage of interested parties agree.
(&lt;sup id="fnref-tungsten-boss"&gt;&lt;a class="footnote-ref" href="#fn-tungsten-boss"&gt;35&lt;/a&gt;&lt;/sup&gt;).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In reply, David Wexelblat denied there were organizational problems, blaming
Packard:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Well, I'm not convinced that's true. The organizational problem was Keith.&lt;/p&gt;
&lt;p&gt;There are PROCESS problems, but I don't accept (at face value) that there
are organizational problems.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Wexelblat was clearly angry with Packard:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;But what Keith is doing, at least how he's handled it, is just flat out
wrong. It's literally dishonest, and morally repugnant. Doesn't mean that
there aren't some valid issues to work, or that there is no need for
branching, but (a) it remains to be proven, and (b) I'll be damned if I'll
quietly accept it being done by someone who is lying to my face.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;and didn't see a need for fully open governance:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;But there are things that don't need to change:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;There is no reason for XFree86 BOD matters to be public. The XFree86
  Project, Inc is a privately-held corporation.&lt;/li&gt;
&lt;li&gt;There is no reason for Core Team matters to be public. This is the
  leadership forum, not a public forum. (&lt;sup id="fnref-dx-cheap"&gt;&lt;a class="footnote-ref" href="#fn-dx-cheap"&gt;37&lt;/a&gt;&lt;/sup&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;David Dawes saw his opponents as trying to take over the hard work of others:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Some of those really old X guys (pre XFree86) left X for dead in the early
'90s.  Now that they've seen that their attitudes then were short-sighted,
they want to come back and take over where they left off.  If we'd listened
to them, we'd have abandoned it too.  And they want us all to follow their
lead now? "Thanks for keeping it alive guys, but we'll take it from here,"
is the attitude. (&lt;sup id="fnref-dawes-old-guys"&gt;&lt;a class="footnote-ref" href="#fn-dawes-old-guys"&gt;38&lt;/a&gt;&lt;/sup&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Rich Murphey could not see the point of governance discussions:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You seem to have an obsession with governing, leading,
the will of the community and democracy.&lt;/p&gt;
&lt;p&gt;Why are any of these critical to development success?  They
have nothing to do with what motivates open-source developers.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The lack of direction for the core group was an advantage:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Core has very much to do, and as all-volunteer developers they pretty much
decide whatever they do themselves.  There is a remarkable degree of
consensus, in part because there is no one imposing a direction or mandate
on them.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Developers are leaders and should not be accountable to any 'community':&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The developers are the leaders.  And yes, they have no
accountability to you because they are volunteers.  They
code whatever they damn well please when the want to.&lt;/p&gt;
&lt;p&gt;I wish you luck in holding everyone accountable to the
will of the community and imposing formal policies on everyone.
I can imagine how many developers that will attract (&lt;sup id="fnref-murphey-phoey"&gt;&lt;a class="footnote-ref" href="#fn-murphey-phoey"&gt;39&lt;/a&gt;&lt;/sup&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Alan_Cox"&gt;Alan Cox&lt;/a&gt; thought the problem was one
of resistance to change:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This isnt about voting, governance and dictatorship IMHO, its about change.
XFree86 is hard to get involved with usefully, resistant to cool ideas and
strongly wedded to an occasional not rolling regular release model.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;He insisted that change was essential to the project:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;X has to evolve, X has to do cool stuff, X has to let people break stuff, X
has to delegate trust to driver maintainers far more. To me it doesn't
matter if Keith and friends spin off an "Xperimental" or XFree itself
changes, but that change is vital to the future of X11.&lt;/p&gt;
&lt;p&gt;If the XFree BOD doesn't want to be the evolving at high rate and really
believes the current plodding progress is the right path, don't harass Keith
work with him, endorse an Xperimental project and see what it produces.  If
it works the community wins, if it fails you get both to smirk, and to take
the good bits and the lessons it learned.  (&lt;sup id="fnref-cox-change"&gt;&lt;a class="footnote-ref" href="#fn-cox-change"&gt;40&lt;/a&gt;&lt;/sup&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Packard and other interested developers held a series of teleconferences in
late March / early April to discuss what to do next
(&lt;sup id="fnref-teleconference-1"&gt;&lt;a class="footnote-ref" href="#fn-teleconference-1"&gt;41&lt;/a&gt;&lt;/sup&gt;&lt;sup id="fnref-teleconference-2"&gt;&lt;a class="footnote-ref" href="#fn-teleconference-2"&gt;42&lt;/a&gt;&lt;/sup&gt;&lt;sup id="fnref-teleconference-3"&gt;&lt;a class="footnote-ref" href="#fn-teleconference-3"&gt;43&lt;/a&gt;&lt;/sup&gt;). They decided to
set up a new site for collaboration on X windows work,
&lt;a href="http://web.archive.org/web/20030531183127/http://xwin.org/"&gt;xwin.org&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;xwin.org is a forum for community participation in X, not a development
project. The X development community needs to work together to form a
government. The hope is that community governance will encourage rapid
advances in the X window system&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Packard explained his reasons for acting in a Linux Weekly News interview
(&lt;sup id="fnref-kp-lwn-interview"&gt;&lt;a class="footnote-ref" href="#fn-kp-lwn-interview"&gt;16&lt;/a&gt;&lt;/sup&gt;).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The highest priority should be to create an environment where people are
encouraged to participate to whatever extent they are able, and where these
contributors feel ownership of their code and pride in the community in
which they work.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Xouvert fork&lt;/h2&gt;
&lt;p&gt;In August
&lt;a href="http://web.archive.org/web/20030819010029/http://www.xouvert.org/"&gt;xouvert.org&lt;/a&gt;
announced a fork of the XFree86 project. Xouvert did a first release in
December 2003, but the main XFree96 developers were not involved, and the
project slowed and folded relatively quickly thereafter (&lt;sup id="fnref-osnews-x-marks"&gt;&lt;a class="footnote-ref" href="#fn-osnews-x-marks"&gt;44&lt;/a&gt;&lt;/sup&gt;).&lt;/p&gt;
&lt;h2&gt;Cygwin loses patience&lt;/h2&gt;
&lt;p&gt;In October 2003, Cygwin publicly announced it would no longer contribute to
XFree86 development because they had been unable to persuade David Dawes to
give them CVS commit access (&lt;sup id="fnref-cygwin-no-more"&gt;&lt;a class="footnote-ref" href="#fn-cygwin-no-more"&gt;45&lt;/a&gt;&lt;/sup&gt;).&lt;/p&gt;
&lt;p&gt;Egbert Eich commented as an XFree86 core member:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I understand that the level of frustration among contributors has risen to a
point that people are starting to use bad words.  I've tried to get support
from individual core team members for giving you commit rights. After I was
unable to do so (maybe I asked the wrong ones) I decided to no longer persue
[sic] the issue.  None of the initiatives I've made so far have been
accepted.&lt;/p&gt;
&lt;p&gt;I don't understand why people cannot deal with issues on the pragmatic level
by looking at how one can best distribute the workload so that the burdeon
[sic] on each individual volunteer is reduced.  The discussion always turns
to who owes what to whom. This is the wrong question. All or most of us are
volunteers. Therefore noone owes anything to anybody (&lt;sup id="fnref-egbert-sigh"&gt;&lt;a class="footnote-ref" href="#fn-egbert-sigh"&gt;46&lt;/a&gt;&lt;/sup&gt;).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;XFree86 core team disbands&lt;/h2&gt;
&lt;p&gt;David Dawes successfully proposed disbanding the XFree86 core team in December
2003:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I'm very pleased to announce that a majority of the XFree86 core team has
voted in favour of my proposal to disband the core team.&lt;/p&gt;
&lt;p&gt;I believe that this is an acknowlegement [sic] that the core team was no
longer representative of the active, experienced and skilled XFree86
developers, or a place where technical discussion happens (&lt;sup id="fnref-core-disbands"&gt;&lt;a class="footnote-ref" href="#fn-core-disbands"&gt;47&lt;/a&gt;&lt;/sup&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The bare announcement caused considerable confusion, with some taking it to
mean that the XFree86 project was closing down (&lt;sup id="fnref-disband-confused"&gt;&lt;a class="footnote-ref" href="#fn-disband-confused"&gt;48&lt;/a&gt;&lt;/sup&gt;). There
was no indication of any other structure to replace the core.  An ex-member of
the core team explained it as a way of avoiding potential complaint:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I think it doesn't really mean anything at all, so it's hard to say much
about it.  The core team was basically an honor role, which outsiders
assumed was a kabal [sic] of some sort despite the core and bod [board of
directors] repeatedly explaining that it wasn't.  Now it's gone, so people
will have to find something else to complain about. (&lt;sup id="fnref-core-gone"&gt;&lt;a class="footnote-ref" href="#fn-core-gone"&gt;49&lt;/a&gt;&lt;/sup&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Start of the X.org foundation&lt;/h2&gt;
&lt;p&gt;In January 2004, many of those involved in the discussion formed a new company
called the X.Org foundation (as distinct from the previous X.Org consortium).
A presentation to the Linux World Expo on 22nd January (&lt;sup id="fnref-xorg-foundation"&gt;&lt;a class="footnote-ref" href="#fn-xorg-foundation"&gt;50&lt;/a&gt;&lt;/sup&gt;)
gave the mission statement as:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To promote a proactive and participatory community for Open Source X Window
System and desktop development&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The same presentation records that a development tree had been established.&lt;/p&gt;
&lt;p&gt;The interim board of directors (&lt;sup id="fnref-xorg-interim-bod"&gt;&lt;a class="footnote-ref" href="#fn-xorg-interim-bod"&gt;51&lt;/a&gt;&lt;/sup&gt;) was composed of
representatives from industry and free software organizations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Stuart Anderson, Free Standards Group&lt;/li&gt;
&lt;li&gt;Egbert Eich - SuSe&lt;/li&gt;
&lt;li&gt;Mattais Ettrich - KDE&lt;/li&gt;
&lt;li&gt;Jim Gettys - Hewlett Packard&lt;/li&gt;
&lt;li&gt;Georg Greve - FSF Europe&lt;/li&gt;
&lt;li&gt;Stuart Kreitman - SUN Microsystems&lt;/li&gt;
&lt;li&gt;Kevin Martin - Red Hat&lt;/li&gt;
&lt;li&gt;Jim McQuillan - Linux Terminal Server Project&lt;/li&gt;
&lt;li&gt;Leon Shiman - Shiman Associates&lt;/li&gt;
&lt;li&gt;Jeremy White - Code Weavers&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;License change and collapse of XFree86&lt;/h2&gt;
&lt;p&gt;On 29th January 2004, David Dawes announced a change to the base XFree86
license (&lt;sup id="fnref-license-announce"&gt;&lt;a class="footnote-ref" href="#fn-license-announce"&gt;53&lt;/a&gt;&lt;/sup&gt;).&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://web.archive.org/web/20140910005646/http://www.xfree86.org/legal/licenses.html"&gt;new
license&lt;/a&gt;
added a non-standard clause that required any derived work to include a
specified acknowledgment of XFree86 in the documentation or "in the software
itself":&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The end-user documentation included with the redistribution, if any, must
include the following acknowledgment: "This product includes software
developed by The XFree86 Project, Inc (http://www.xfree86.org/) and its
contributors", in the same place and form as other third-party
acknowledgments. Alternately, this acknowledgment may appear in the software
itself, in the same form and location as other such third-party
acknowledgments.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It later turned out that the board of directors had unanimously agreed to this
change in a private meeting (&lt;sup id="fnref-dawes-hung-out"&gt;&lt;a class="footnote-ref" href="#fn-dawes-hung-out"&gt;56&lt;/a&gt;&lt;/sup&gt;).&lt;/p&gt;
&lt;p&gt;Most people considered that the new license did not allow derived code to use
the GPL license, because the GPL says that a GPL or derived work "may not
impose any further restrictions on the recipients' exercise of the rights
granted herein." (&lt;sup id="fnref-gpl-2"&gt;&lt;a class="footnote-ref" href="#fn-gpl-2"&gt;52&lt;/a&gt;&lt;/sup&gt;).  Here the further restriction is the requirement
to acknowledge XFree86 in documentation or "in the software itself".&lt;/p&gt;
&lt;p&gt;Dawes appeared unmoved by concerns about this change, suggesting that the GPL
ought to change instead:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Has anyone considered modifying the GPL to be more compatible with other
Open Source licences rather than trying to force all Open Source licences to
be a subset of the GPL? (&lt;sup id="fnref-gpl-should-change"&gt;&lt;a class="footnote-ref" href="#fn-gpl-should-change"&gt;54&lt;/a&gt;&lt;/sup&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The long email threads that followed were mostly against the license change
- e.g. (&lt;sup id="fnref-gettys-on-change"&gt;&lt;a class="footnote-ref" href="#fn-gettys-on-change"&gt;58&lt;/a&gt;&lt;/sup&gt;, &lt;sup id="fnref-license-no-support"&gt;&lt;a class="footnote-ref" href="#fn-license-no-support"&gt;55&lt;/a&gt;&lt;/sup&gt;).&lt;/p&gt;
&lt;p&gt;Richard Stallman joined the discussion to see if he could help restore GPL
compatibility (&lt;sup id="fnref-stallman-on-license"&gt;&lt;a class="footnote-ref" href="#fn-stallman-on-license"&gt;59&lt;/a&gt;&lt;/sup&gt;) but Dawes was not ready to compromise:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;However, I also believe that all of that is irrelevant, and that anyone who
writes software should have the freedom to set conditions on what others may
do with it(*).  The choice for others is then either to accept the
conditions (legally enforcable or not), or to avoid said software.&lt;/p&gt;
&lt;p&gt;(*) Providing of course that the act of setting the conditions is not itself
illegal. (&lt;sup id="fnref-dawes-no-gpl"&gt;&lt;a class="footnote-ref" href="#fn-dawes-no-gpl"&gt;60&lt;/a&gt;&lt;/sup&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Dawes was clearly surprised that others on the board did not support his
unmoving position on the license:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I can't speak for why the XFree86 board that voted unanimously for the
change, (and some of whom were advocating more radical changes), have hung
me out to dry on this.  I also can't speak for why some developers have
privately supported the change, but won't do so publicly.  But then taking
the heat on things like this comes with the job.  And I have very thick
asbestos undies, but boy do they itch :-) (&lt;sup id="fnref-dawes-hung-out"&gt;&lt;a class="footnote-ref" href="#fn-dawes-hung-out"&gt;56&lt;/a&gt;&lt;/sup&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;X.org releases fork of X&lt;/h2&gt;
&lt;p&gt;In April 2004, the new X.Org foundation released their own fork of X
Windows (&lt;sup id="fnref-xorg-release"&gt;&lt;a class="footnote-ref" href="#fn-xorg-release"&gt;57&lt;/a&gt;&lt;/sup&gt;):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The new X.Org release, called X Window System Version 11 Release 6.7
(X11R6.7), builds on the work of the X.Org X11R6.6 and XFree86TM Project
Inc. V4.4RC2 releases to combine many of the latest developments from a
large number of the participants and companies working with the X Window
community ...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The announcement quotes Jim Gettys:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This release marks the return to community development of the X Window
System under governance open to all contributors for the first time since
the founding of the X Consortium in 1988.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Among other endorsements in that announcment, Branden Robinson of Debian
writes:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We're also delighted that the X.Org Foundation is dedicated to retaining the
licensing model that has made the X Window System an enduring success.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;The decline and fall of XFree86&lt;/h2&gt;
&lt;p&gt;The license change appears to have been the last straw in forcing adoption of
X.org instead of XFree86 (&lt;sup id="fnref-xfree86-and-gpl"&gt;&lt;a class="footnote-ref" href="#fn-xfree86-and-gpl"&gt;61&lt;/a&gt;&lt;/sup&gt;).  In a page dated from May 2004,
XFree86 lists the Linux and BSD distributions supporting the first release of
XFree86 that contained the license change (&lt;sup id="fnref-xfree-distributions"&gt;&lt;a class="footnote-ref" href="#fn-xfree-distributions"&gt;62&lt;/a&gt;&lt;/sup&gt;).  The list
does not include SUSE, Redhat or Debian among many others.&lt;/p&gt;
&lt;p&gt;The page at (&lt;sup id="fnref-xfree86-and-gpl"&gt;&lt;a class="footnote-ref" href="#fn-xfree86-and-gpl"&gt;61&lt;/a&gt;&lt;/sup&gt;) gives a vivid summary of the almost complete
collapse of XFree86 at this point, with all significant developer and packager
interest switching to X.org.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn-oss-why-fork"&gt;
&lt;p&gt;&lt;a href="http://www.dwheeler.com/oss_fs_why.html#forking"&gt;http://www.dwheeler.com/oss_fs_why.html#forking&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-oss-why-fork" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-wp-x-history"&gt;
&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/X_Window_System#History"&gt;http://en.wikipedia.org/wiki/X_Window_System#History&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-wp-x-history" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-xfree86-history"&gt;
&lt;p&gt;&lt;a href="http://www.linux-mag.com/id/922"&gt;http://www.linux-mag.com/id/922&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-xfree86-history" title="Jump back to footnote 3 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-rebel-code"&gt;
&lt;p&gt;Glynn Moody "Rebel Code: Linux and the Open Source Revolution"
2002, p63. Perseus Publishing.&amp;#160;&lt;a class="footnote-backref" href="#fnref-rebel-code" title="Jump back to footnote 4 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-wp-x386"&gt;
&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/X386"&gt;http://en.wikipedia.org/wiki/X386&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-wp-x386" title="Jump back to footnote 5 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-xfree-inc-minutes"&gt;
&lt;p&gt;&lt;a href="http://web.archive.org/web/20030101005232/http://www.xfree86.org/legal/org_minutes.html"&gt;http://web.archive.org/web/20030101005232/http://www.xfree86.org/legal/org_minutes.html&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-xfree-inc-minutes" title="Jump back to footnote 6 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-core-board-1994"&gt;
&lt;p&gt;&lt;a href="http://ftp.x.org/R5contrib/XFree86-2.1.Announce"&gt;http://ftp.x.org/R5contrib/XFree86-2.1.Announce&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-core-board-1994" title="Jump back to footnote 7 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-president-dawes"&gt;
&lt;p&gt;&lt;a href="http://www.informatica.co.cr/linux-desktops/research/1994/1116.html"&gt;http://www.informatica.co.cr/linux-desktops/research/1994/1116.html&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-president-dawes" title="Jump back to footnote 8 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-current-bod"&gt;
&lt;p&gt;&lt;a href="https://web.archive.org/web/20140910005646/http://www.xfree86.org/legal/bod.html"&gt;https://web.archive.org/web/20140910005646/http://www.xfree86.org/legal/bod.html&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-current-bod" title="Jump back to footnote 9 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-xorg-consortium"&gt;
&lt;p&gt;&lt;a href="http://web.archive.org/web/20030402160332/http://www.x.org/XOrg_background.html"&gt;http://web.archive.org/web/20030402160332/http://www.x.org/XOrg_background.html&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-xorg-consortium" title="Jump back to footnote 10 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-readme-3.3.6"&gt;
&lt;p&gt;&lt;a href="http://www.xfree86.org/3.3.6/README7.html"&gt;http://www.xfree86.org/3.3.6/README7.html&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-readme-3.3.6" title="Jump back to footnote 11 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-man-4.3.0"&gt;
&lt;p&gt;&lt;a href="http://www.xfree86.org/4.3.0/XFree86.1.html"&gt;http://www.xfree86.org/4.3.0/XFree86.1.html&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-man-4.3.0" title="Jump back to footnote 12 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-xfree86-announce"&gt;
&lt;p&gt;&lt;a href="https://groups.google.com/forum/#!original/comp.unix.bsd/vQZnxPoIYEA/G0B0hyz0iYgJ"&gt;https://groups.google.com/forum/#!original/comp.unix.bsd/vQZnxPoIYEA/G0B0hyz0iYgJ&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-xfree86-announce" title="Jump back to footnote 13 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-x-non-free"&gt;
&lt;p&gt;&lt;a href="http://old.lwn.net/lwn/1998/0409/xstate.html"&gt;http://old.lwn.net/lwn/1998/0409/xstate.html&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-x-non-free" title="Jump back to footnote 14 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-coreteam"&gt;
&lt;p&gt;&lt;a href="http://web.archive.org/web/20020906035319/http://www.xfree86.org/coreteam.html"&gt;http://web.archive.org/web/20020906035319/http://www.xfree86.org/coreteam.html&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-coreteam" title="Jump back to footnote 15 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-kp-lwn-interview"&gt;
&lt;p&gt;&lt;a href="http://lwn.net/Articles/27673"&gt;http://lwn.net/Articles/27673&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-kp-lwn-interview" title="Jump back to footnote 16 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-kp-resume"&gt;
&lt;p&gt;&lt;a href="http://keithp.com/keithp/resume"&gt;http://keithp.com/keithp/resume&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-kp-resume" title="Jump back to footnote 17 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-xrandr-man"&gt;
&lt;p&gt;&lt;a href="http://www.xfree86.org/4.3.0/Xrandr.3.html"&gt;http://www.xfree86.org/4.3.0/Xrandr.3.html&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-xrandr-man" title="Jump back to footnote 18 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-mh-blog"&gt;
&lt;p&gt;&lt;a href="http://web.archive.org/web/20030304041751/http://advogato.org/person/mharris/diary.html?start=5"&gt;http://web.archive.org/web/20030304041751/http://advogato.org/person/mharris/diary.html?start=5&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-mh-blog" title="Jump back to footnote 19 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-mh-blog-fu"&gt;
&lt;p&gt;&lt;a href="http://web.archive.org/web/20030304041751/http://advogato.org/person/mharris/diary.html?start=6"&gt;http://web.archive.org/web/20030304041751/http://advogato.org/person/mharris/diary.html?start=6&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-mh-blog-fu" title="Jump back to footnote 20 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-kp-issue"&gt;
&lt;p&gt;&lt;a href="https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2003-March/002018.html"&gt;https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2003-March/002018.html&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-kp-issue" title="Jump back to footnote 21 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-forum-communication"&gt;
&lt;p&gt;&lt;a href="https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2003-March/000476.html"&gt;https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2003-March/000476.html&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-forum-communication" title="Jump back to footnote 22 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-debian-xfree86-pain"&gt;
&lt;p&gt;&lt;a href="http://lists.debian.org/debian-x/2003/11/msg00285.html"&gt;http://lists.debian.org/debian-x/2003/11/msg00285.html&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-debian-xfree86-pain" title="Jump back to footnote 23 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-xfixes-announce"&gt;
&lt;p&gt;&lt;a href="http://www.mail-archive.com/xpert@xfree86.org/msg11266.html"&gt;http://www.mail-archive.com/xpert@xfree86.org/msg11266.html&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-xfixes-announce" title="Jump back to footnote 24 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-xfixes-disabled"&gt;
&lt;p&gt;&lt;a href="http://www.mail-archive.com/xpert@xfree86.org/msg11290.html"&gt;http://www.mail-archive.com/xpert@xfree86.org/msg11290.html&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-xfixes-disabled" title="Jump back to footnote 25 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-kp-is-out"&gt;
&lt;p&gt;&lt;a href="https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2003-March/001997.html"&gt;https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2003-March/001997.html&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-kp-is-out" title="Jump back to footnote 26 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-call-for-open"&gt;
&lt;p&gt;&lt;a href="https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2003-March/002165.html"&gt;https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2003-March/002165.html&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-call-for-open" title="Jump back to footnote 27 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-kp-no-cvs"&gt;
&lt;p&gt;&lt;a href="https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2003-March/002105.html"&gt;https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2003-March/002105.html&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-kp-no-cvs" title="Jump back to footnote 28 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-kp-xfixes-rumor"&gt;
&lt;p&gt;&lt;a href="https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2003-March/002121.html"&gt;https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2003-March/002121.html&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-kp-xfixes-rumor" title="Jump back to footnote 29 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-dw-have-cause"&gt;
&lt;p&gt;&lt;a href="https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2003-March/002461.html"&gt;https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2003-March/002461.html&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-dw-have-cause" title="Jump back to footnote 30 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-kp-release-emails"&gt;
&lt;p&gt;&lt;a href="https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2003-March/002525.html"&gt;https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2003-March/002525.html&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-kp-release-emails" title="Jump back to footnote 31 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-dw-well-try"&gt;
&lt;p&gt;&lt;a href="https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2003-March/002545.html"&gt;https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2003-March/002545.html&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-dw-well-try" title="Jump back to footnote 32 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-private-cced"&gt;
&lt;p&gt;&lt;a href="https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2003-April/003139.html"&gt;https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2003-April/003139.html&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-private-cced" title="Jump back to footnote 33 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-hourihane1"&gt;
&lt;p&gt;&lt;a href="https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2003-March/002168.html"&gt;https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2003-March/002168.html&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-hourihane1" title="Jump back to footnote 34 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-tungsten-boss"&gt;
&lt;p&gt;&lt;a href="https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2003-March/002040.html"&gt;https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2003-March/002040.html&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-tungsten-boss" title="Jump back to footnote 35 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-dawes-tungsten"&gt;
&lt;p&gt;&lt;a href="https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2003-April/003357.html"&gt;https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2003-April/003357.html&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-dawes-tungsten" title="Jump back to footnote 36 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-dx-cheap"&gt;
&lt;p&gt;&lt;a href="https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2003-March/002124.html"&gt;https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2003-March/002124.html&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-dx-cheap" title="Jump back to footnote 37 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-dawes-old-guys"&gt;
&lt;p&gt;&lt;a href="https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2003-March/002208.html"&gt;https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2003-March/002208.html&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-dawes-old-guys" title="Jump back to footnote 38 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-murphey-phoey"&gt;
&lt;p&gt;&lt;a href="https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2003-March/002286.html"&gt;https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2003-March/002286.html&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-murphey-phoey" title="Jump back to footnote 39 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-cox-change"&gt;
&lt;p&gt;&lt;a href="https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2003-March/002077.html"&gt;https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2003-March/002077.html&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-cox-change" title="Jump back to footnote 40 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-teleconference-1"&gt;
&lt;p&gt;&lt;a href="http://web.archive.org/web/20030607004252/http://fontconfig.org/~keithp/teleconference/minutes-2003-03-27.txt"&gt;http://web.archive.org/web/20030607004252/http://fontconfig.org/~keithp/teleconference/minutes-2003-03-27.txt&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-teleconference-1" title="Jump back to footnote 41 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-teleconference-2"&gt;
&lt;p&gt;&lt;a href="http://web.archive.org/web/20030815144605/http://fontconfig.org/~keithp/teleconference/minutes-2003-04-03.txt"&gt;http://web.archive.org/web/20030815144605/http://fontconfig.org/~keithp/teleconference/minutes-2003-04-03.txt&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-teleconference-2" title="Jump back to footnote 42 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-teleconference-3"&gt;
&lt;p&gt;&lt;a href="http://web.archive.org/web/20030420065828/http://fontconfig.org/~keithp/teleconference/telecon-2003-04-10.txt"&gt;http://web.archive.org/web/20030420065828/http://fontconfig.org/~keithp/teleconference/telecon-2003-04-10.txt&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-teleconference-3" title="Jump back to footnote 43 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-osnews-x-marks"&gt;
&lt;p&gt;&lt;a href="http://www.osnews.com/story/6157/X_Marks_the_Spot_Looking_back_at_X11_Developments_of_Past_Year/page2/"&gt;http://www.osnews.com/story/6157/X_Marks_the_Spot_Looking_back_at_X11_Developments_of_Past_Year/page2/&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-osnews-x-marks" title="Jump back to footnote 44 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-cygwin-no-more"&gt;
&lt;p&gt;&lt;a href="http://cygwin.com/ml/cygwin-xfree/2003-10/msg00328.html"&gt;http://cygwin.com/ml/cygwin-xfree/2003-10/msg00328.html&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-cygwin-no-more" title="Jump back to footnote 45 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-egbert-sigh"&gt;
&lt;p&gt;&lt;a href="http://cygwin.com/ml/cygwin-xfree/2003-10/msg00360.html"&gt;http://cygwin.com/ml/cygwin-xfree/2003-10/msg00360.html&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-egbert-sigh" title="Jump back to footnote 46 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-core-disbands"&gt;
&lt;p&gt;&lt;a href="http://www.mail-archive.com/devel%40xfree86.org/msg04639.html"&gt;http://www.mail-archive.com/devel%40xfree86.org/msg04639.html&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-core-disbands" title="Jump back to footnote 47 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-disband-confused"&gt;
&lt;p&gt;&lt;a href="http://www.mail-archive.com/devel@xfree86.org/msg04658.html"&gt;http://www.mail-archive.com/devel@xfree86.org/msg04658.html&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-disband-confused" title="Jump back to footnote 48 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-core-gone"&gt;
&lt;p&gt;&lt;a href="http://www.mail-archive.com/devel@xfree86.org/msg04888.html"&gt;http://www.mail-archive.com/devel@xfree86.org/msg04888.html&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-core-gone" title="Jump back to footnote 49 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-xorg-foundation"&gt;
&lt;p&gt;&lt;a href="https://web.archive.org/web/20040616015847/http://www.x.org/XOrg_Foundation_22Jan04.pdf"&gt;https://web.archive.org/web/20040616015847/http://www.x.org/XOrg_Foundation_22Jan04.pdf&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-xorg-foundation" title="Jump back to footnote 50 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-xorg-interim-bod"&gt;
&lt;p&gt;&lt;a href="https://web.archive.org/web/20040418234209/http://www.x.org/XOrg_Foundation_Board.html"&gt;https://web.archive.org/web/20040418234209/http://www.x.org/XOrg_Foundation_Board.html&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-xorg-interim-bod" title="Jump back to footnote 51 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-gpl-2"&gt;
&lt;p&gt;&lt;a href="http://www.gnu.org/licenses/old-licenses/gpl-2.0.html"&gt;http://www.gnu.org/licenses/old-licenses/gpl-2.0.html&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-gpl-2" title="Jump back to footnote 52 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-license-announce"&gt;
&lt;p&gt;&lt;a href="https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2004-January/001892.html"&gt;https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2004-January/001892.html&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-license-announce" title="Jump back to footnote 53 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-gpl-should-change"&gt;
&lt;p&gt;&lt;a href="https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2004-January/003907.html"&gt;https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2004-January/003907.html&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-gpl-should-change" title="Jump back to footnote 54 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-license-no-support"&gt;
&lt;p&gt;&lt;a href="https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2004-February/004035.html"&gt;https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2004-February/004035.html&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-license-no-support" title="Jump back to footnote 55 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-dawes-hung-out"&gt;
&lt;p&gt;&lt;a href="https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2004-February/004039.html"&gt;https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2004-February/004039.html&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-dawes-hung-out" title="Jump back to footnote 56 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-xorg-release"&gt;
&lt;p&gt;&lt;a href="http://lwn.net/Articles/79302"&gt;http://lwn.net/Articles/79302&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-xorg-release" title="Jump back to footnote 57 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-gettys-on-change"&gt;
&lt;p&gt;&lt;a href="https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2004-February/003945.html"&gt;https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2004-February/003945.html&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-gettys-on-change" title="Jump back to footnote 58 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-stallman-on-license"&gt;
&lt;p&gt;&lt;a href="https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2004-February/003974.html"&gt;https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2004-February/003974.html&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-stallman-on-license" title="Jump back to footnote 59 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-dawes-no-gpl"&gt;
&lt;p&gt;&lt;a href="https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2004-February/004021.html"&gt;https://web.archive.org/web/20140910005646/http://www.xfree86.org/pipermail/forum/2004-February/004021.html&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-dawes-no-gpl" title="Jump back to footnote 60 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-xfree86-and-gpl"&gt;
&lt;p&gt;&lt;a href="http://www.dwheeler.com/essays/gpl-compatible.html#xfree86"&gt;http://www.dwheeler.com/essays/gpl-compatible.html#xfree86&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-xfree86-and-gpl" title="Jump back to footnote 61 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-xfree-distributions"&gt;
&lt;p&gt;&lt;a href="http://web.archive.org/web/20040531203819/http://www.xfree86.org/distro-support.html"&gt;http://web.archive.org/web/20040531203819/http://www.xfree86.org/distro-support.html&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-xfree-distributions" title="Jump back to footnote 62 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="Management"></category><category term="open source"></category><category term="free software"></category><category term="core"></category><category term="XFree86"></category><category term="Xorg"></category></entry><entry><title>The core melts down</title><link href="http://asterisk.dynevor.org/melting-core.html" rel="alternate"></link><published>2013-06-25T14:00:00-07:00</published><updated>2013-06-25T14:00:00-07:00</updated><author><name>Matthew Brett</name></author><id>tag:asterisk.dynevor.org,2013-06-25:/melting-core.html</id><summary type="html">&lt;p&gt;NetBSD developers on death by leadership vacuum&lt;/p&gt;</summary><content type="html">&lt;p&gt;My friend &lt;a href="http://pirsquared.org"&gt;Paul Ivanov&lt;/a&gt; kindly pointed me to this
&lt;a href="http://julipedia.meroh.net/2013/06/self-interview-after-leaving-netbsd.html"&gt;Self-interview after leaving the NetBSD
board&lt;/a&gt; by Julio Merino.&lt;/p&gt;
&lt;p&gt;This lead me to an earlier &lt;a href="http://mail-index.netbsd.org/netbsd-users/2006/08/30/0016.html"&gt;NetBSD resignation
email&lt;/a&gt; from
Charles Hannum, one of the "4 originators of NetBSD".&lt;/p&gt;
&lt;p&gt;They both complain of lack of leadership.  From Merino's post:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[the "core" and "board of directors"] teams are dysfunctional because they
do not provide leadership: all they do is act reactively to requests from
users and/or to resolve internal disputes. In other words: there is no
initiative nor vision emerging from these teams (and, for that matter, from
anybody).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;From Hannum:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There is no high-level direction; if you ask "what about the problems with
threads" or "will there be a flash-friendly file system", the best you'll
get is "we'd love to have both" -- but no work is done to recruit people to
code these things, or encourage existing developers to work on them.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Merino also complains that the NetBSD leadership will not take risks:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;As things are today, the project leaders will almost always settle for
either the conservative solution or a solution that compromises on every
detail so as to not annoy anyone. Unfortunately, this approach implicitly
disappoints a group of people — a group of people that may not be vocal
enough to express their preferences out of previous disappointments. All of
this, of course, only happens when the leader teams are asked about
something, as they will rarely provide input unless asked for (see reactive
model above).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Hannum wonders aloud whether the diffuse management structure is the problem:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Much of this early structure (CVS, web site, cabal ["core" group], etc.) was
copied verbatim by other open source (this term not being in wide use yet)
projects -- even the form of the project name and the term "core".  This
later became a kind of standard template for starting up an open source
project. [...] I'm sorry to say that I helped create this problem, and that
most of the projects which modeled themselves after NetBSD (probably due to
its high popularity in 1993 and 1994) have suffered similar problems.
FreeBSD and XFree86, for example, have both forked successor projects
(Dragonfly and X.org) for very similar reasons.&amp;gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Hannum wanted a change in leadership:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1) There must be a strong leadership, and it is not the current one.
 The leadership must honestly want NetBSD to be a premier, world class
 system with leading edge features.  The leadership must set
 aggressive goals, and actively recruit people to make them happen.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;and:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I must repeat a point I've made earlier.  The current "management" of the
project is not going to either fix the project's problems, or lead the
project to solutions.  They are going to maintain the status quo, and
nothing else.  If the project is to rise from its charred stump, this
"management" must be disbanded and replaced wholesale.  Anything less is a
non-solution.&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="Management"></category><category term="open source"></category><category term="free software"></category><category term="core"></category><category term="BSD"></category><category term="NetBSD"></category></entry><entry><title>Disapproval of heart</title><link href="http://asterisk.dynevor.org/disapproval-of-heart.html" rel="alternate"></link><published>2013-04-22T00:50:00-07:00</published><updated>2013-04-22T00:50:00-07:00</updated><author><name>Matthew Brett</name></author><id>tag:asterisk.dynevor.org,2013-04-22:/disapproval-of-heart.html</id><summary type="html">&lt;p&gt;Sima Qian on the dangers of a wry smile&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;Shortly before this, the minister of agriculture Yan Yi had been put to
death. Yan Yi had originally been a village head in Ji'nan.  Because of his
honesty and integrity, he was gradually promoted in office until he became
one of the highest ministers. [...]&lt;/p&gt;
&lt;p&gt;... Yan Yi was on bad terms with Zhang Tang.  When someone bought an
accusation against Yan Yi for some other affair, the matter was referred to
Zhang Tang for investigation.  Earlier Yan Yi had been talking with one of
his guests, when the guest remarked that some new law that had just been put
into affect did not seem very practical.  Yan Yi had made no answer, but
given only a subtle wry twist of his lips.  Zhang Tang sent a memorial to the
throne relating this affair and stating "Yang Yi, one of the nine highest
ministers, having seen that the law was impractical, did not state his
opinion to the emperor, but nevertheless disapproved of it in his heart.  For
this offence he is deserving of death!".  From this time on, the crime known
as "disapproval of heart" became a part of the law, and most of the high
ministers and officials resorted to gross flattery in order to stay in the
good graces of the emperor.&lt;/p&gt;
&lt;p&gt;-- &lt;cite&gt;Sima Qian, Records of the Grand Historian; Han Dynasty II (revised
edition). pp 75-76 Translated by Burton Watson.  Columbia University Press
1993 &lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="History"></category><category term="China"></category></entry><entry><title>A bad time</title><link href="http://asterisk.dynevor.org/a-bad-time.html" rel="alternate"></link><published>2013-04-21T16:30:00-07:00</published><updated>2013-04-21T16:30:00-07:00</updated><author><name>Matthew Brett</name></author><id>tag:asterisk.dynevor.org,2013-04-21:/a-bad-time.html</id><summary type="html">&lt;p&gt;Sima Qian on decay&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;From the time of these men on, the empire was torn by the strife of the
warring kingdoms. Men honoured deceit and power and scoffed at benevolence
and righteousness; they put wealth and possession first and courtesy and
humility last.&lt;/p&gt;
&lt;p&gt;-- &lt;cite&gt;Sima Qian, Records of the Grand Historian; Han Dynasty II (revised
edition). p 84 Translated by Burton Watson.  Columbia University Press 1993
&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="History"></category><category term="China"></category></entry></feed>